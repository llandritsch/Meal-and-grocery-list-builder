[DEBUG] 2021-03-11 14:41:07.510 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-11 14:41:07.530 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-11 14:41:07.551 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-11 14:41:07.855 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-11 14:41:07.859 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-11 14:41:08.389 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-11 14:41:09.018 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-11 14:41:09.067 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-11 14:41:09.071 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-11 14:41:09.129 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-11 14:41:09.228 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59d0cdb6
[DEBUG] 2021-03-11 14:41:09.228 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59d0cdb6
[DEBUG] 2021-03-11 14:41:09.228 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59d0cdb6
[DEBUG] 2021-03-11 14:41:09.230 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16ee9aa7
[DEBUG] 2021-03-11 14:41:09.230 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@113ee1ce
[DEBUG] 2021-03-11 14:41:09.232 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6d963d70
[DEBUG] 2021-03-11 14:41:09.236 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5e180aaf
[DEBUG] 2021-03-11 14:41:09.236 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5e180aaf
[DEBUG] 2021-03-11 14:41:09.236 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e180aaf
[DEBUG] 2021-03-11 14:41:09.240 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7135ce0a
[DEBUG] 2021-03-11 14:41:09.240 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7135ce0a
[DEBUG] 2021-03-11 14:41:09.241 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7135ce0a
[DEBUG] 2021-03-11 14:41:09.243 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@166c2c17
[DEBUG] 2021-03-11 14:41:09.244 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@166c2c17
[DEBUG] 2021-03-11 14:41:09.244 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@166c2c17
[DEBUG] 2021-03-11 14:41:09.246 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@15c6027d
[DEBUG] 2021-03-11 14:41:09.246 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@15c6027d
[DEBUG] 2021-03-11 14:41:09.246 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15c6027d
[DEBUG] 2021-03-11 14:41:09.249 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@30bbcf91
[DEBUG] 2021-03-11 14:41:09.250 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@30bbcf91
[DEBUG] 2021-03-11 14:41:09.250 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@30bbcf91
[DEBUG] 2021-03-11 14:41:09.254 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37c5284a
[DEBUG] 2021-03-11 14:41:09.254 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37c5284a
[DEBUG] 2021-03-11 14:41:09.254 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37c5284a
[DEBUG] 2021-03-11 14:41:09.259 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5729b410
[DEBUG] 2021-03-11 14:41:09.259 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5729b410
[DEBUG] 2021-03-11 14:41:09.260 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5729b410
[DEBUG] 2021-03-11 14:41:09.263 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38588dea
[DEBUG] 2021-03-11 14:41:09.263 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38588dea
[DEBUG] 2021-03-11 14:41:09.265 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c9ef6e9
[DEBUG] 2021-03-11 14:41:09.265 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c9ef6e9
[DEBUG] 2021-03-11 14:41:09.267 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5c18d6d4
[DEBUG] 2021-03-11 14:41:09.267 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5c18d6d4
[DEBUG] 2021-03-11 14:41:09.268 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@608cd501
[DEBUG] 2021-03-11 14:41:09.270 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65be88ae
[DEBUG] 2021-03-11 14:41:09.273 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@487cd177
[DEBUG] 2021-03-11 14:41:09.274 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@487cd177
[DEBUG] 2021-03-11 14:41:09.276 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4f1fb828
[DEBUG] 2021-03-11 14:41:09.276 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4f1fb828
[DEBUG] 2021-03-11 14:41:09.287 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1a21f43f
[DEBUG] 2021-03-11 14:41:09.287 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a21f43f
[DEBUG] 2021-03-11 14:41:09.289 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a70d302
[DEBUG] 2021-03-11 14:41:09.290 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a70d302
[DEBUG] 2021-03-11 14:41:09.292 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1213ffbc
[DEBUG] 2021-03-11 14:41:09.292 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1213ffbc
[DEBUG] 2021-03-11 14:41:09.295 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2199e845
[DEBUG] 2021-03-11 14:41:09.295 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2199e845
[DEBUG] 2021-03-11 14:41:09.297 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798cb6d9
[DEBUG] 2021-03-11 14:41:09.297 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798cb6d9
[DEBUG] 2021-03-11 14:41:09.300 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6f6cc7da
[DEBUG] 2021-03-11 14:41:09.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6f6cc7da
[DEBUG] 2021-03-11 14:41:09.305 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@153cb763
[DEBUG] 2021-03-11 14:41:09.306 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@153cb763
[DEBUG] 2021-03-11 14:41:09.308 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5e1a986c
[DEBUG] 2021-03-11 14:41:09.308 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e1a986c
[DEBUG] 2021-03-11 14:41:09.312 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@22ead351
[DEBUG] 2021-03-11 14:41:09.312 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ead351
[DEBUG] 2021-03-11 14:41:09.314 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@44e4cb76
[DEBUG] 2021-03-11 14:41:09.314 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@44e4cb76
[DEBUG] 2021-03-11 14:41:09.315 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@44e4cb76
[DEBUG] 2021-03-11 14:41:09.318 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@15e1f8fe
[DEBUG] 2021-03-11 14:41:09.319 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@79957f11
[DEBUG] 2021-03-11 14:41:09.320 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@79957f11
[DEBUG] 2021-03-11 14:41:09.320 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@79957f11
[DEBUG] 2021-03-11 14:41:09.321 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28393e82
[DEBUG] 2021-03-11 14:41:09.323 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@22a260ff
[DEBUG] 2021-03-11 14:41:09.323 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22a260ff
[DEBUG] 2021-03-11 14:41:09.324 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@b14b60a
[DEBUG] 2021-03-11 14:41:09.325 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b14b60a
[DEBUG] 2021-03-11 14:41:09.326 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@237add
[DEBUG] 2021-03-11 14:41:09.326 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@237add
[DEBUG] 2021-03-11 14:41:09.327 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@12952aff
[DEBUG] 2021-03-11 14:41:09.327 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12952aff
[DEBUG] 2021-03-11 14:41:09.328 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f5614f9
[DEBUG] 2021-03-11 14:41:09.328 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f5614f9
[DEBUG] 2021-03-11 14:41:09.329 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5eb0a686
[DEBUG] 2021-03-11 14:41:09.330 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@24876a7e
[DEBUG] 2021-03-11 14:41:09.330 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@24876a7e
[DEBUG] 2021-03-11 14:41:09.330 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@24876a7e
[DEBUG] 2021-03-11 14:41:09.331 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7fd4e815
[DEBUG] 2021-03-11 14:41:09.332 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7fd4e815
[DEBUG] 2021-03-11 14:41:09.332 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7fd4e815
[DEBUG] 2021-03-11 14:41:09.333 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6e1ae763
[DEBUG] 2021-03-11 14:41:09.334 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@457a5b2d
[DEBUG] 2021-03-11 14:41:09.337 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@126f8f24
[DEBUG] 2021-03-11 14:41:09.337 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@126f8f24
[DEBUG] 2021-03-11 14:41:09.337 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@126f8f24
[DEBUG] 2021-03-11 14:41:09.339 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4fecf308
[DEBUG] 2021-03-11 14:41:09.340 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4fecf308
[DEBUG] 2021-03-11 14:41:09.340 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4fecf308
[DEBUG] 2021-03-11 14:41:09.340 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2f9dda71
[DEBUG] 2021-03-11 14:41:09.341 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@31f77791
[DEBUG] 2021-03-11 14:41:09.342 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6a55594b
[DEBUG] 2021-03-11 14:41:09.342 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a55594b
[DEBUG] 2021-03-11 14:41:09.342 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17222c11
[DEBUG] 2021-03-11 14:41:09.344 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@58feb6b0
[DEBUG] 2021-03-11 14:41:09.344 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58feb6b0
[DEBUG] 2021-03-11 14:41:09.348 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@27a6fef2
[DEBUG] 2021-03-11 14:41:09.349 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27a6fef2
[DEBUG] 2021-03-11 14:41:09.349 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@445bce9a
[DEBUG] 2021-03-11 14:41:09.350 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19ae2ee5
[DEBUG] 2021-03-11 14:41:09.352 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@f723cdb
[DEBUG] 2021-03-11 14:41:09.359 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d124d29
[DEBUG] 2021-03-11 14:41:09.359 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d124d29
[DEBUG] 2021-03-11 14:41:09.360 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@fb5aeed
[DEBUG] 2021-03-11 14:41:09.361 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73893ec1
[DEBUG] 2021-03-11 14:41:09.361 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37af24cb
[DEBUG] 2021-03-11 14:41:09.361 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7926352f
[DEBUG] 2021-03-11 14:41:09.361 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5bc63e20
[DEBUG] 2021-03-11 14:41:09.361 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61037caf
[DEBUG] 2021-03-11 14:41:09.361 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fc49538
[DEBUG] 2021-03-11 14:41:09.362 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@670342a2
[DEBUG] 2021-03-11 14:41:09.422 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-11 14:41:09.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-11 14:41:09.426 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-11 14:41:09.427 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-11 14:41:09.428 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-11 14:41:09.431 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-11 14:41:09.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-11 14:41:09.434 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-11 14:41:09.436 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-11 14:41:09.438 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-11 14:41:09.439 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-11 14:41:09.440 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-11 14:41:09.440 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-11 14:41:09.442 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-11 14:41:09.453 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_mealBuilder
[INFO ] 2021-03-11 14:41:09.454 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-11 14:41:09.454 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-11 14:41:09.733 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-11 14:41:10.318 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-11 14:41:10.318 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-03-11 14:41:10.318 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-11 14:41:10.384 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-11 14:41:10.428 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-11 14:41:10.472 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-11 14:41:10.533 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-11 14:41:10.538 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7772d266] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a21c74]
[DEBUG] 2021-03-11 14:41:10.676 [main] AnnotationBinder - Binding entity from annotated class: entity.Users
[DEBUG] 2021-03-11 14:41:10.735 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-11 14:41:10.749 [main] EntityBinder - Import with entity name Users
[DEBUG] 2021-03-11 14:41:10.755 [main] EntityBinder - Bind entity entity.Users on table Users
[DEBUG] 2021-03-11 14:41:10.802 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.809 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-11 14:41:10.813 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Users:id]
[DEBUG] 2021-03-11 14:41:10.817 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-11 14:41:10.821 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-11 14:41:10.825 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-11 14:41:10.826 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.827 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-03-11 14:41:10.827 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Users:password]
[DEBUG] 2021-03-11 14:41:10.827 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-03-11 14:41:10.827 [main] PropertyBinder - Building property password
[DEBUG] 2021-03-11 14:41:10.828 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='Users_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-03-11 14:41:10.829 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.832 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.847 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.848 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.849 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-11 14:41:10.851 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] 2021-03-11 14:41:10.852 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] 2021-03-11 14:41:10.853 [main] CollectionBinder - Collection role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:10.862 [main] PropertyBinder - Building property recipes
[DEBUG] 2021-03-11 14:41:10.862 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.863 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2021-03-11 14:41:10.863 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Users:username]
[DEBUG] 2021-03-11 14:41:10.863 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2021-03-11 14:41:10.863 [main] PropertyBinder - Building property username
[DEBUG] 2021-03-11 14:41:10.865 [main] AnnotationBinder - Binding entity from annotated class: entity.Recipes
[DEBUG] 2021-03-11 14:41:10.866 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-11 14:41:10.866 [main] EntityBinder - Import with entity name Recipes
[DEBUG] 2021-03-11 14:41:10.866 [main] EntityBinder - Bind entity entity.Recipes on table Recipes
[DEBUG] 2021-03-11 14:41:10.869 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=recipe_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.869 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-11 14:41:10.869 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Recipes:id]
[DEBUG] 2021-03-11 14:41:10.869 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-11 14:41:10.870 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-11 14:41:10.870 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(recipe_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-11 14:41:10.870 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=public_recipe, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.870 [main] PropertyBinder - MetadataSourceProcessor property public_recipe with lazy=false
[DEBUG] 2021-03-11 14:41:10.871 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Recipes:public_recipe]
[DEBUG] 2021-03-11 14:41:10.871 [main] SimpleValueBinder - building SimpleValue for public_recipe
[DEBUG] 2021-03-11 14:41:10.871 [main] PropertyBinder - Building property public_recipe
[DEBUG] 2021-03-11 14:41:10.871 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=recipe_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.872 [main] PropertyBinder - MetadataSourceProcessor property recipe_name with lazy=false
[DEBUG] 2021-03-11 14:41:10.872 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Recipes:recipe_name]
[DEBUG] 2021-03-11 14:41:10.872 [main] SimpleValueBinder - building SimpleValue for recipe_name
[DEBUG] 2021-03-11 14:41:10.872 [main] PropertyBinder - Building property recipe_name
[DEBUG] 2021-03-11 14:41:10.872 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='Users_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-03-11 14:41:10.873 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-11 14:41:10.876 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-11 14:41:10.877 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-11 14:41:10.878 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-03-11 14:41:10.878 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2021-03-11 14:41:10.878 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-11 14:41:10.878 [main] SimpleValueBinder - Starting fillSimpleValue for public_recipe
[DEBUG] 2021-03-11 14:41:10.878 [main] SimpleValueBinder - Starting fillSimpleValue for recipe_name
[DEBUG] 2021-03-11 14:41:10.883 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2021-03-11 14:41:10.884 [main] PrimaryKey - Forcing column [recipe_id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2021-03-11 14:41:10.884 [main] CollectionSecondPass - Second pass for collection: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:10.884 [main] CollectionBinder - Binding a OneToMany: entity.Users.recipes through a foreign key
[DEBUG] 2021-03-11 14:41:10.885 [main] CollectionBinder - Mapping collection: entity.Users.recipes -> Recipes
[DEBUG] 2021-03-11 14:41:10.886 [main] CollectionSecondPass - Mapped collection key: Users_id, one-to-many: entity.Recipes
[DEBUG] 2021-03-11 14:41:10.886 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Users
[DEBUG] 2021-03-11 14:41:10.892 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Users
[DEBUG] 2021-03-11 14:41:10.975 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-11 14:41:10.976 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-11 14:41:10.977 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-11 14:41:10.978 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-11 14:41:10.979 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-11 14:41:11.092 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-11 14:41:11.127 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-11 14:41:11.128 [main] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/test-classes:/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/classes:/Users/lisaandritsch/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/lisaandritsch/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/lisaandritsch/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/lisaandritsch/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/Users/lisaandritsch/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/lisaandritsch/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/Users/lisaandritsch/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/Users/lisaandritsch/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/Users/lisaandritsch/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/lisaandritsch/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/lisaandritsch/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/lisaandritsch/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/Users/lisaandritsch/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/lisaandritsch/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/lisaandritsch/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/lisaandritsch/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/lisaandritsch/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/lisaandritsch/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/lisaandritsch/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/lisaandritsch/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/lisaandritsch/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/Users/lisaandritsch/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/Users/lisaandritsch/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/lisaandritsch/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/lisaandritsch/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/lisaandritsch/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://openjdk.java.net/, user.timezone=America/Chicago, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home/lib, sun.java.command=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/surefire/surefirebooter5616352422753354163.jar /Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/surefire/surefire16062764381352624372tmp /Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/surefire/surefire_04564584716082442583tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, surefire.test.class.path=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/test-classes:/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/classes:/Users/lisaandritsch/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/lisaandritsch/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/lisaandritsch/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/lisaandritsch/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/Users/lisaandritsch/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/lisaandritsch/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/Users/lisaandritsch/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/Users/lisaandritsch/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/Users/lisaandritsch/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/lisaandritsch/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/lisaandritsch/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/lisaandritsch/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/Users/lisaandritsch/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/lisaandritsch/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/lisaandritsch/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/lisaandritsch/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/lisaandritsch/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/lisaandritsch/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/lisaandritsch/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/lisaandritsch/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/lisaandritsch/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/Users/lisaandritsch/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/Users/lisaandritsch/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/Users/lisaandritsch/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/Users/lisaandritsch/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/Users/lisaandritsch/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:, sun.cpu.endian=little, user.home=/Users/lisaandritsch, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home, file.separator=/, basedir=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/surefire/surefirebooter5616352422753354163.jar, connection.password=1LoveBacon!, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.9+7-LTS, user.name=lisaandritsch, path.separator=:, hibernate.connection.username=****, os.version=10.15.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_mealBuilder, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, localRepository=/Users/lisaandritsch/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/t1/cf3c018n3358k026jslb5qb00000gn/T/, idea.version=2020.3.1, java.version=11.0.9, user.dir=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5c8b10b4, java.library.path=/Users/lisaandritsch/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.9+7-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/test_mealBuilder, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2021-03-11 14:41:11.177 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-11 14:41:11.177 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-11 14:41:11.178 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-11 14:41:11.178 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7772d266] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6723cce7]
[DEBUG] 2021-03-11 14:41:11.279 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Recipes] is safe
[DEBUG] 2021-03-11 14:41:11.279 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Recipes
[DEBUG] 2021-03-11 14:41:11.322 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Recipes] is safe
[DEBUG] 2021-03-11 14:41:11.322 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Recipes
[DEBUG] 2021-03-11 14:41:11.829 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Users] is safe
[DEBUG] 2021-03-11 14:41:11.829 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Users
[DEBUG] 2021-03-11 14:41:11.830 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Users] is safe
[DEBUG] 2021-03-11 14:41:11.830 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Users
[DEBUG] 2021-03-11 14:41:11.877 [main] AbstractCollectionPersister - Static SQL for collection: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:11.878 [main] AbstractCollectionPersister -  Row insert: update Recipes set Users_id=? where recipe_id=?
[DEBUG] 2021-03-11 14:41:11.878 [main] AbstractCollectionPersister -  Row update: update Recipes set  where recipe_id=?
[DEBUG] 2021-03-11 14:41:11.878 [main] AbstractCollectionPersister -  Row delete: update Recipes set Users_id=null where Users_id=? and recipe_id=?
[DEBUG] 2021-03-11 14:41:11.878 [main] AbstractCollectionPersister -  One-shot delete: update Recipes set Users_id=null where Users_id=?
[DEBUG] 2021-03-11 14:41:11.885 [main] AbstractEntityPersister - Static SQL for entity: entity.Recipes
[DEBUG] 2021-03-11 14:41:11.885 [main] AbstractEntityPersister -  Version select: select recipe_id from Recipes where recipe_id =?
[DEBUG] 2021-03-11 14:41:11.885 [main] AbstractEntityPersister -  Snapshot select: select recipes_.recipe_id, recipes_.public_recipe as public_r2_0_, recipes_.recipe_name as recipe_n3_0_, recipes_.Users_id as Users_id4_0_ from Recipes recipes_ where recipes_.recipe_id=?
[DEBUG] 2021-03-11 14:41:11.885 [main] AbstractEntityPersister -  Insert 0: insert into Recipes (public_recipe, recipe_name, Users_id, recipe_id) values (?, ?, ?, ?)
[DEBUG] 2021-03-11 14:41:11.886 [main] AbstractEntityPersister -  Update 0: update Recipes set public_recipe=?, recipe_name=?, Users_id=? where recipe_id=?
[DEBUG] 2021-03-11 14:41:11.886 [main] AbstractEntityPersister -  Delete 0: delete from Recipes where recipe_id=?
[DEBUG] 2021-03-11 14:41:11.886 [main] AbstractEntityPersister -  Identity insert: insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:11.945 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78504ce9]
[DEBUG] 2021-03-11 14:41:11.946 [main] MetamodelGraphWalker - Visiting attribute path : public_recipe
[DEBUG] 2021-03-11 14:41:11.946 [main] MetamodelGraphWalker - Visiting attribute path : recipe_name
[DEBUG] 2021-03-11 14:41:11.946 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-11 14:41:11.952 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ea9a091]
[DEBUG] 2021-03-11 14:41:11.955 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-11 14:41:11.956 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2021-03-11 14:41:11.956 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2021-03-11 14:41:11.956 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2021-03-11 14:41:11.957 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-11 14:41:12.005 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-11 14:41:12.012 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Recipes)
    - Returns
       - EntityReturnImpl(entity=entity.Recipes, querySpaceUid=<gen:0>, path=entity.Recipes)
          - EntityAttributeFetchImpl(entity=entity.Users, querySpaceUid=<gen:1>, path=entity.Recipes.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Users)
                - SQL table alias mapping - users1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2021-03-11 14:41:12.016 [main] EntityLoader - Static select for entity entity.Recipes [NONE]: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:12.017 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13390a96]
[DEBUG] 2021-03-11 14:41:12.017 [main] MetamodelGraphWalker - Visiting attribute path : public_recipe
[DEBUG] 2021-03-11 14:41:12.017 [main] MetamodelGraphWalker - Visiting attribute path : recipe_name
[DEBUG] 2021-03-11 14:41:12.017 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-11 14:41:12.017 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7497a554]
[DEBUG] 2021-03-11 14:41:12.017 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-03-11 14:41:12.017 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2021-03-11 14:41:12.017 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2021-03-11 14:41:12.018 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2021-03-11 14:41:12.018 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-11 14:41:12.018 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-11 14:41:12.019 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Recipes)
    - Returns
       - EntityReturnImpl(entity=entity.Recipes, querySpaceUid=<gen:0>, path=entity.Recipes)
          - EntityAttributeFetchImpl(entity=entity.Users, querySpaceUid=<gen:1>, path=entity.Recipes.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Users)
                - SQL table alias mapping - users1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2021-03-11 14:41:12.019 [main] EntityLoader - Static select for entity entity.Recipes [READ]: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:12.043 [main] Loader - Static select for action ACTION_MERGE on entity entity.Recipes: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_ from Recipes recipes0_ where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:12.043 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Recipes: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_ from Recipes recipes0_ where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:12.043 [main] AbstractEntityPersister - Static SQL for entity: entity.Users
[DEBUG] 2021-03-11 14:41:12.043 [main] AbstractEntityPersister -  Version select: select id from Users where id =?
[DEBUG] 2021-03-11 14:41:12.044 [main] AbstractEntityPersister -  Snapshot select: select users_.id, users_.password as password2_1_, users_.username as username3_1_ from Users users_ where users_.id=?
[DEBUG] 2021-03-11 14:41:12.044 [main] AbstractEntityPersister -  Insert 0: insert into Users (password, username, id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:12.044 [main] AbstractEntityPersister -  Update 0: update Users set password=?, username=? where id=?
[DEBUG] 2021-03-11 14:41:12.044 [main] AbstractEntityPersister -  Delete 0: delete from Users where id=?
[DEBUG] 2021-03-11 14:41:12.044 [main] AbstractEntityPersister -  Identity insert: insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:12.044 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0fefac]
[DEBUG] 2021-03-11 14:41:12.044 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-11 14:41:12.044 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2021-03-11 14:41:12.045 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35a9e665]
[DEBUG] 2021-03-11 14:41:12.047 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d0e41]
[DEBUG] 2021-03-11 14:41:12.049 [main] MetamodelGraphWalker - Visiting attribute path : recipes.public_recipe
[DEBUG] 2021-03-11 14:41:12.049 [main] MetamodelGraphWalker - Visiting attribute path : recipes.recipe_name
[DEBUG] 2021-03-11 14:41:12.049 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2021-03-11 14:41:12.050 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2021-03-11 14:41:12.052 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2021-03-11 14:41:12.052 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-11 14:41:12.052 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-11 14:41:12.058 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Users)
    - Returns
       - EntityReturnImpl(entity=entity.Users, querySpaceUid=<gen:0>, path=entity.Users)
          - CollectionAttributeFetchImpl(collection=entity.Users.recipes, querySpaceUid=<gen:1>, path=entity.Users.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Recipes, querySpaceUid=<gen:2>, path=entity.Users.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=entity.Users.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {Users_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Recipes)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2021-03-11 14:41:12.058 [main] EntityLoader - Static select for entity entity.Users [NONE]: select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.058 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60bc308b]
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2021-03-11 14:41:12.059 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43f99817]
[DEBUG] 2021-03-11 14:41:12.059 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a2798a2]
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Visiting attribute path : recipes.public_recipe
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Visiting attribute path : recipes.recipe_name
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2021-03-11 14:41:12.059 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2021-03-11 14:41:12.059 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-11 14:41:12.059 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-11 14:41:12.060 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Users)
    - Returns
       - EntityReturnImpl(entity=entity.Users, querySpaceUid=<gen:0>, path=entity.Users)
          - CollectionAttributeFetchImpl(collection=entity.Users.recipes, querySpaceUid=<gen:1>, path=entity.Users.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Recipes, querySpaceUid=<gen:2>, path=entity.Users.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=entity.Users.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {Users_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Recipes)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2021-03-11 14:41:12.060 [main] EntityLoader - Static select for entity entity.Users [READ]: select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.062 [main] Loader - Static select for action ACTION_MERGE on entity entity.Users: select users0_.id as id1_1_1_, users0_.password as password2_1_1_, users0_.username as username3_1_1_, recipes1_.Users_id as Users_id4_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.public_recipe as public_r2_0_0_, recipes1_.recipe_name as recipe_n3_0_0_, recipes1_.Users_id as Users_id4_0_0_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.062 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Users: select users0_.id as id1_1_1_, users0_.password as password2_1_1_, users0_.username as username3_1_1_, recipes1_.Users_id as Users_id4_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.public_recipe as public_r2_0_0_, recipes1_.recipe_name as recipe_n3_0_0_, recipes1_.Users_id as Users_id4_0_0_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.070 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f4964f2]
[DEBUG] 2021-03-11 14:41:12.070 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bf01a01]
[DEBUG] 2021-03-11 14:41:12.070 [main] MetamodelGraphWalker - Visiting attribute path : public_recipe
[DEBUG] 2021-03-11 14:41:12.070 [main] MetamodelGraphWalker - Visiting attribute path : recipe_name
[DEBUG] 2021-03-11 14:41:12.071 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-11 14:41:12.071 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-03-11 14:41:12.071 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-11 14:41:12.074 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-11 14:41:12.074 [main] LoadPlanTreePrinter - LoadPlan(collection=entity.Users.recipes)
    - Returns
       - CollectionReturnImpl(collection=entity.Users.recipes, querySpaceUid=<gen:0>, path=[entity.Users.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Recipes, querySpaceUid=<gen:1>, path=[entity.Users.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=entity.Users.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {Users_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - recipe_i1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Recipes)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {recipe_i1_0_1_}

[DEBUG] 2021-03-11 14:41:12.075 [main] CollectionLoader - Static select for collection entity.Users.recipes: select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:12.125 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-11 14:41:12.125 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-11 14:41:12.126 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-11 14:41:12.131 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-11 14:41:12.131 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-11 14:41:12.133 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-11 14:41:12.133 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-11 14:41:12.134 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7d95166a
[DEBUG] 2021-03-11 14:41:12.136 [main] SessionFactoryRegistry - Registering SessionFactory: 4066d67a-da2f-4556-909c-64ed7c3060de (<unnamed>)
[DEBUG] 2021-03-11 14:41:12.136 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-11 14:41:12.294 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-11 14:41:12.322 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.324 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.354 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d3d5094
[DEBUG] 2021-03-11 14:41:12.421 [main] QueryTranslatorImpl - parse() - HQL: delete from entity.Recipes
[DEBUG] 2021-03-11 14:41:12.430 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.445 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'entity'
             \-[IDENT] Node: 'Recipes'

[DEBUG] 2021-03-11 14:41:12.495 [main] HqlSqlBaseWalker - delete << begin [level=1, statement=delete]
[DEBUG] 2021-03-11 14:41:12.522 [main] FromElement - FromClause{level=1} : entity.Recipes (<no alias>) -> recipes0_
[DEBUG] 2021-03-11 14:41:12.523 [main] HqlSqlBaseWalker - delete : finishing up [level=1, statement=delete]
[DEBUG] 2021-03-11 14:41:12.524 [main] HqlSqlBaseWalker - delete >> end [level=1, statement=delete]
[DEBUG] 2021-03-11 14:41:12.524 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Recipes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[recipes0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Recipes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Recipes,tableAlias=recipes0_,origin=null,columns={,className=entity.Recipes}}

[DEBUG] 2021-03-11 14:41:12.525 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.537 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.554 [main] SQL - delete from Recipes
[DEBUG] 2021-03-11 14:41:12.602 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.609 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.610 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.614 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.614 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.616 [main] QueryTranslatorImpl - parse() - HQL: delete from entity.Users
[DEBUG] 2021-03-11 14:41:12.617 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.617 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'entity'
             \-[IDENT] Node: 'Users'

[DEBUG] 2021-03-11 14:41:12.617 [main] HqlSqlBaseWalker - delete << begin [level=1, statement=delete]
[DEBUG] 2021-03-11 14:41:12.618 [main] FromElement - FromClause{level=1} : entity.Users (<no alias>) -> users0_
[DEBUG] 2021-03-11 14:41:12.618 [main] HqlSqlBaseWalker - delete : finishing up [level=1, statement=delete]
[DEBUG] 2021-03-11 14:41:12.618 [main] HqlSqlBaseWalker - delete >> end [level=1, statement=delete]
[DEBUG] 2021-03-11 14:41:12.619 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=users0_,origin=null,columns={,className=entity.Users}}

[DEBUG] 2021-03-11 14:41:12.619 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.619 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.619 [main] SQL - delete from Users
[DEBUG] 2021-03-11 14:41:12.626 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.627 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.628 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.677 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.678 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.680 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.681 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipes'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-11 14:41:12.683 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:12.683 [main] FromElement - FromClause{level=1} : entity.Recipes (generatedAlias0) -> recipes0_
[DEBUG] 2021-03-11 14:41:12.684 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipes0_.recipe_id
[DEBUG] 2021-03-11 14:41:12.686 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:12.686 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipes0_.recipe_id ) ( FromClause{level=1} Recipes recipes0_ ) )
[DEBUG] 2021-03-11 14:41:12.701 [main] JoinProcessor - Using FROM fragment [Recipes recipes0_]
[DEBUG] 2021-03-11 14:41:12.701 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:12.702 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipes0_.recipe_id as recipe_i1_0_' {alias=generatedAlias0, className=entity.Recipes, tableAlias=recipes0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipes0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Recipes recipes0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Recipes,tableAlias=recipes0_,origin=null,columns={,className=entity.Recipes}}

[DEBUG] 2021-03-11 14:41:12.702 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.702 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.702 [main] QueryTranslatorImpl - SQL: select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.702 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.713 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.724 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.731 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.731 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.768 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:12.773 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:12.778 [main] IdentifierGeneratorHelper - Natively generated identity: 373
[DEBUG] 2021-03-11 14:41:12.778 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.783 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.784 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:12.784 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:12.791 [main] Collections - Collection found: [entity.Users.recipes#373], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:12.793 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:12.793 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:12.794 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:12.795 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=373, username=Lucy}
[DEBUG] 2021-03-11 14:41:12.795 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.795 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:12.800 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.801 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.809 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.817 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:12.820 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:12.825 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.832 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#373]
[DEBUG] 2021-03-11 14:41:12.832 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:12.832 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.832 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:12.832 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.833 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:12.833 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.833 [main] TwoPhaseLoad - Done materializing entity [entity.Users#373]
[DEBUG] 2021-03-11 14:41:12.833 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.833 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.833 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.834 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.834 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#373
[DEBUG] 2021-03-11 14:41:12.834 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.836 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.836 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.839 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.842 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.842 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.844 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:12.844 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:12.848 [main] IdentifierGeneratorHelper - Natively generated identity: 207
[DEBUG] 2021-03-11 14:41:12.848 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.848 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.849 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:12.849 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:12.849 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:12.849 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:12.850 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:12.850 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=207, user=entity.Users#373}
[DEBUG] 2021-03-11 14:41:12.852 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.854 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.854 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.856 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.859 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:12.859 [main] Loader - Result row: EntityKey[entity.Recipes#207]
[DEBUG] 2021-03-11 14:41:12.860 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#207]
[DEBUG] 2021-03-11 14:41:12.860 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:12.860 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.861 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:12.861 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.861 [main] TwoPhaseLoad - Processing attribute `user` : value = 373
[DEBUG] 2021-03-11 14:41:12.861 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.861 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.863 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:12.863 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:12.864 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.864 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#373]
[DEBUG] 2021-03-11 14:41:12.864 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:12.864 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.865 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:12.865 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.865 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:12.865 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.865 [main] TwoPhaseLoad - Done materializing entity [entity.Users#373]
[DEBUG] 2021-03-11 14:41:12.865 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.865 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.865 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.865 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.865 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#373
[DEBUG] 2021-03-11 14:41:12.866 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#207]
[DEBUG] 2021-03-11 14:41:12.866 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.869 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.870 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.872 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:12.872 [main] Loader - Result row: EntityKey[entity.Recipes#207]
[DEBUG] 2021-03-11 14:41:12.873 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#207]
[DEBUG] 2021-03-11 14:41:12.873 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:12.873 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.873 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:12.873 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.873 [main] TwoPhaseLoad - Processing attribute `user` : value = 373
[DEBUG] 2021-03-11 14:41:12.874 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.874 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.877 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:12.877 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:12.877 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#373]
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.878 [main] TwoPhaseLoad - Done materializing entity [entity.Users#373]
[DEBUG] 2021-03-11 14:41:12.878 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.878 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#373]
[DEBUG] 2021-03-11 14:41:12.878 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.879 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.879 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#373
[DEBUG] 2021-03-11 14:41:12.879 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#207]
[DEBUG] 2021-03-11 14:41:12.879 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.886 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.886 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.888 [main] SQL - delete from Recipes
[DEBUG] 2021-03-11 14:41:12.889 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.891 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.892 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.892 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.893 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.894 [main] SQL - delete from Users
[DEBUG] 2021-03-11 14:41:12.895 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.897 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.898 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.898 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.899 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.901 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.903 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.903 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.905 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:12.905 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:12.907 [main] IdentifierGeneratorHelper - Natively generated identity: 374
[DEBUG] 2021-03-11 14:41:12.907 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.907 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.907 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:12.908 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:12.908 [main] Collections - Collection found: [entity.Users.recipes#374], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:12.908 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:12.908 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:12.909 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:12.909 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=374, username=Lucy}
[DEBUG] 2021-03-11 14:41:12.909 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.909 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:12.912 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.913 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.913 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.916 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:12.916 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:12.916 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#374]
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.917 [main] TwoPhaseLoad - Done materializing entity [entity.Users#374]
[DEBUG] 2021-03-11 14:41:12.917 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.917 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.917 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.918 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.918 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#374
[DEBUG] 2021-03-11 14:41:12.918 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.920 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.920 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.923 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.924 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:12.924 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:12.925 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:12.925 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:12.928 [main] IdentifierGeneratorHelper - Natively generated identity: 208
[DEBUG] 2021-03-11 14:41:12.928 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.929 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:12.929 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:12.929 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:12.929 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:12.929 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:12.929 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:12.929 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=208, user=entity.Users#374}
[DEBUG] 2021-03-11 14:41:12.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.932 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.932 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:12.932 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:12.934 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:12.934 [main] Loader - Result row: EntityKey[entity.Recipes#208]
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#208]
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Processing attribute `user` : value = 374
[DEBUG] 2021-03-11 14:41:12.935 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.935 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.937 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:12.938 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:12.938 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#374]
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.939 [main] TwoPhaseLoad - Done materializing entity [entity.Users#374]
[DEBUG] 2021-03-11 14:41:12.939 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.939 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.939 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.940 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.940 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#374
[DEBUG] 2021-03-11 14:41:12.940 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#208]
[DEBUG] 2021-03-11 14:41:12.940 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:12.955 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-03-11 14:41:12.956 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-03-11 14:41:12.957 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.958 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipes'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'recipe_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-11 14:41:12.958 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:12.959 [main] FromElement - FromClause{level=1} : entity.Recipes (generatedAlias0) -> recipes0_
[DEBUG] 2021-03-11 14:41:12.959 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipes0_.recipe_id
[DEBUG] 2021-03-11 14:41:12.962 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipes0_.recipe_id
[DEBUG] 2021-03-11 14:41:12.964 [main] DotNode - getDataType() : recipe_name -> org.hibernate.type.StringType@5c18d6d4
[DEBUG] 2021-03-11 14:41:12.965 [main] FromReferenceNode - Resolved : generatedAlias0.recipe_name -> recipes0_.recipe_name
[DEBUG] 2021-03-11 14:41:12.967 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:12.968 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipes0_.recipe_id ) ( FromClause{level=1} Recipes recipes0_ ) ( where ( like ( recipes0_.recipe_name recipes0_.recipe_id recipe_name ) ? ) ) )
[DEBUG] 2021-03-11 14:41:12.968 [main] JoinProcessor - Using FROM fragment [Recipes recipes0_]
[DEBUG] 2021-03-11 14:41:12.968 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:12.968 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipes0_.recipe_id as recipe_i1_0_' {alias=generatedAlias0, className=entity.Recipes, tableAlias=recipes0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipes0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Recipes recipes0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Recipes,tableAlias=recipes0_,origin=null,columns={,className=entity.Recipes}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'recipes0_.recipe_name' {propertyName=recipe_name,dereferenceType=PRIMITIVE,getPropertyPath=recipe_name,path=generatedAlias0.recipe_name,tableAlias=recipes0_,className=entity.Recipes,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipes0_.recipe_id' {alias=generatedAlias0, className=entity.Recipes, tableAlias=recipes0_}
          |  \-[IDENT] IdentNode: 'recipe_name' {originalText=recipe_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5c18d6d4}

[DEBUG] 2021-03-11 14:41:12.968 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.968 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-03-11 14:41:12.969 [main] QueryTranslatorImpl - SQL: select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_ where recipes0_.recipe_name like ?
[DEBUG] 2021-03-11 14:41:12.969 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:12.973 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_ where recipes0_.recipe_name like ?
[DEBUG] 2021-03-11 14:41:12.976 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:12.976 [main] Loader - Result row: EntityKey[entity.Recipes#208]
[DEBUG] 2021-03-11 14:41:12.977 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#208]
[DEBUG] 2021-03-11 14:41:12.977 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:12.977 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.977 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:12.977 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.977 [main] TwoPhaseLoad - Processing attribute `user` : value = 374
[DEBUG] 2021-03-11 14:41:12.978 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.978 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:12.988 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:12.988 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:12.988 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#374]
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:12.989 [main] TwoPhaseLoad - Done materializing entity [entity.Users#374]
[DEBUG] 2021-03-11 14:41:12.989 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.990 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#374]
[DEBUG] 2021-03-11 14:41:12.990 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:12.990 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:12.990 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#374
[DEBUG] 2021-03-11 14:41:12.990 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#208]
[DEBUG] 2021-03-11 14:41:12.991 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.024 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.024 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.026 [main] SQL - delete from Recipes
[DEBUG] 2021-03-11 14:41:13.027 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.028 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.029 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.029 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.030 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.031 [main] SQL - delete from Users
[DEBUG] 2021-03-11 14:41:13.032 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.033 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.034 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.035 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.035 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.036 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.038 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.038 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.040 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.041 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.045 [main] IdentifierGeneratorHelper - Natively generated identity: 375
[DEBUG] 2021-03-11 14:41:13.045 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.046 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.046 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.046 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.046 [main] Collections - Collection found: [entity.Users.recipes#375], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.046 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.047 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.047 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.047 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=375, username=Lucy}
[DEBUG] 2021-03-11 14:41:13.047 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.048 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.050 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.051 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.052 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.056 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.056 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.057 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.057 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.057 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.057 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.057 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.057 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.057 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.058 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.058 [main] TwoPhaseLoad - Done materializing entity [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.058 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.058 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.058 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.058 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.058 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#375
[DEBUG] 2021-03-11 14:41:13.058 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.060 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.061 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.064 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.065 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.065 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.067 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.067 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:13.070 [main] IdentifierGeneratorHelper - Natively generated identity: 209
[DEBUG] 2021-03-11 14:41:13.070 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.070 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.071 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.071 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.071 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.071 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.071 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.071 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=209, user=entity.Users#375}
[DEBUG] 2021-03-11 14:41:13.073 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.074 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.074 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.075 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.077 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.077 [main] Loader - Result row: EntityKey[entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Processing attribute `user` : value = 375
[DEBUG] 2021-03-11 14:41:13.077 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.078 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.080 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.080 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.081 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.081 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.081 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.081 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.081 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.082 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.082 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.082 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.082 [main] TwoPhaseLoad - Done materializing entity [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.082 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.082 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.082 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.082 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.082 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#375
[DEBUG] 2021-03-11 14:41:13.083 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.083 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.085 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:13.088 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.088 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.088 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Processing attribute `user` : value = 375
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.089 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.090 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.090 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.090 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.090 [main] TwoPhaseLoad - Done materializing entity [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.090 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.092 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.092 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.094 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.095 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.095 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.095 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.095 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.095 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.096 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.096 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.096 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Recipes#209
[DEBUG] 2021-03-11 14:41:13.096 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.100 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.101 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.102 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.102 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.102 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.103 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.104 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.104 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.104 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=The Big Lebowski's big, scary meal, id=209, user=entity.Users#375}
[DEBUG] 2021-03-11 14:41:13.110 [main] SQL - update Recipes set public_recipe=?, recipe_name=?, Users_id=? where recipe_id=?
[DEBUG] 2021-03-11 14:41:13.117 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.118 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.118 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-03-11 14:41:13.119 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_ where recipes0_.recipe_name like ?
[DEBUG] 2021-03-11 14:41:13.123 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.123 [main] Loader - Result row: EntityKey[entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.124 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.125 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.125 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.125 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = The Big Lebowski's big, scary meal
[DEBUG] 2021-03-11 14:41:13.125 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.125 [main] TwoPhaseLoad - Processing attribute `user` : value = 375
[DEBUG] 2021-03-11 14:41:13.125 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.125 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.126 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.127 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.127 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.127 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.128 [main] TwoPhaseLoad - Done materializing entity [entity.Users#375]
[DEBUG] 2021-03-11 14:41:13.128 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.128 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#375]
[DEBUG] 2021-03-11 14:41:13.128 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.128 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.128 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#375
[DEBUG] 2021-03-11 14:41:13.128 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#209]
[DEBUG] 2021-03-11 14:41:13.128 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.131 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.131 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.133 [main] SQL - delete from Recipes
[DEBUG] 2021-03-11 14:41:13.134 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.136 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.136 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.137 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.137 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.138 [main] SQL - delete from Users
[DEBUG] 2021-03-11 14:41:13.139 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.142 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.143 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.143 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.144 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.146 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.147 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.147 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.149 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.149 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.152 [main] IdentifierGeneratorHelper - Natively generated identity: 376
[DEBUG] 2021-03-11 14:41:13.152 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.152 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.152 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.152 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.153 [main] Collections - Collection found: [entity.Users.recipes#376], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.153 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.153 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.153 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.153 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=376, username=Lucy}
[DEBUG] 2021-03-11 14:41:13.153 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.153 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.155 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.156 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.156 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.159 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.159 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.159 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.159 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#376]
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.160 [main] TwoPhaseLoad - Done materializing entity [entity.Users#376]
[DEBUG] 2021-03-11 14:41:13.160 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.160 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.160 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.160 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.160 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#376
[DEBUG] 2021-03-11 14:41:13.160 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.162 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.163 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.165 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.166 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.166 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.168 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.168 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:13.169 [main] IdentifierGeneratorHelper - Natively generated identity: 210
[DEBUG] 2021-03-11 14:41:13.170 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.170 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.170 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.170 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.170 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.170 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.170 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.171 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=210, user=entity.Users#376}
[DEBUG] 2021-03-11 14:41:13.173 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.174 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.174 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.174 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.176 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.176 [main] Loader - Result row: EntityKey[entity.Recipes#210]
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#210]
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Processing attribute `user` : value = 376
[DEBUG] 2021-03-11 14:41:13.176 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.177 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.178 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.178 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.178 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#376]
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Done materializing entity [entity.Users#376]
[DEBUG] 2021-03-11 14:41:13.179 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.179 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.179 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.179 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.179 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#376
[DEBUG] 2021-03-11 14:41:13.179 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#210]
[DEBUG] 2021-03-11 14:41:13.179 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.181 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:13.183 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.183 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.183 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#210]
[DEBUG] 2021-03-11 14:41:13.183 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.183 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Processing attribute `user` : value = 376
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#210]
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#376]
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.184 [main] TwoPhaseLoad - Done materializing entity [entity.Users#376]
[DEBUG] 2021-03-11 14:41:13.184 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.184 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.184 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.186 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.186 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.186 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.186 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.186 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#376]
[DEBUG] 2021-03-11 14:41:13.186 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.187 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.187 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.187 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Recipes#210
[DEBUG] 2021-03-11 14:41:13.187 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.190 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.190 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.192 [main] SQL - delete from Recipes
[DEBUG] 2021-03-11 14:41:13.193 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.195 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.196 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.196 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.196 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.198 [main] SQL - delete from Users
[DEBUG] 2021-03-11 14:41:13.199 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.201 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.202 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.202 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.202 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.204 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.206 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.206 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.208 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.208 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.209 [main] IdentifierGeneratorHelper - Natively generated identity: 377
[DEBUG] 2021-03-11 14:41:13.210 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.210 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.210 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.210 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.210 [main] Collections - Collection found: [entity.Users.recipes#377], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.211 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.211 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.211 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.211 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=377, username=Lucy}
[DEBUG] 2021-03-11 14:41:13.211 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.211 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.213 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.214 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.215 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.217 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.217 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.218 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#377]
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.218 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.219 [main] TwoPhaseLoad - Done materializing entity [entity.Users#377]
[DEBUG] 2021-03-11 14:41:13.219 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.219 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.219 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.219 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.219 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#377
[DEBUG] 2021-03-11 14:41:13.219 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.220 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.221 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.223 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.225 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.225 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.226 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.226 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:13.228 [main] IdentifierGeneratorHelper - Natively generated identity: 211
[DEBUG] 2021-03-11 14:41:13.228 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.228 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.228 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.228 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.229 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.229 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.229 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.229 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=211, user=entity.Users#377}
[DEBUG] 2021-03-11 14:41:13.231 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.232 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.232 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.232 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.234 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.234 [main] Loader - Result row: EntityKey[entity.Recipes#211]
[DEBUG] 2021-03-11 14:41:13.234 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#211]
[DEBUG] 2021-03-11 14:41:13.235 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.235 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.235 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.235 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.235 [main] TwoPhaseLoad - Processing attribute `user` : value = 377
[DEBUG] 2021-03-11 14:41:13.235 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.235 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.237 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.237 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.237 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#377]
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Done materializing entity [entity.Users#377]
[DEBUG] 2021-03-11 14:41:13.238 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.238 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.238 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.238 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.238 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#377
[DEBUG] 2021-03-11 14:41:13.238 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#211]
[DEBUG] 2021-03-11 14:41:13.239 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.241 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:13.243 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.243 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#211]
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Processing attribute `user` : value = 377
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#211]
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#377]
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.244 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.245 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.245 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.245 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.245 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.245 [main] TwoPhaseLoad - Done materializing entity [entity.Users#377]
[DEBUG] 2021-03-11 14:41:13.245 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.246 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.246 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.248 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.248 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.248 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.248 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.248 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#377]
[DEBUG] 2021-03-11 14:41:13.249 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.249 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.249 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.249 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Recipes#211
[DEBUG] 2021-03-11 14:41:13.249 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.251 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.251 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.259 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.259 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.260 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.260 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.260 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.260 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.260 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=211, user=entity.Users#377}
[DEBUG] 2021-03-11 14:41:13.270 [main] SQL - delete from Recipes where recipe_id=?
[DEBUG] 2021-03-11 14:41:13.275 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.276 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.276 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-11 14:41:13.277 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-03-11 14:41:13.278 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.278 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Recipes#211
[DEBUG] 2021-03-11 14:41:13.279 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.281 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.281 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.282 [main] SQL - delete from Recipes
[DEBUG] 2021-03-11 14:41:13.282 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.283 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.284 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.284 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.284 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.285 [main] SQL - delete from Users
[DEBUG] 2021-03-11 14:41:13.286 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.288 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.289 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.290 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.290 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.292 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.293 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.293 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.294 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.294 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.297 [main] IdentifierGeneratorHelper - Natively generated identity: 378
[DEBUG] 2021-03-11 14:41:13.297 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.298 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.298 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.298 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.298 [main] Collections - Collection found: [entity.Users.recipes#378], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.298 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.298 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.298 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.299 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=378, username=Lucy}
[DEBUG] 2021-03-11 14:41:13.299 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.299 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.300 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.301 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.302 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.303 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.304 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.304 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.304 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.305 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.305 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.305 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.305 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.305 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.305 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#378
[DEBUG] 2021-03-11 14:41:13.305 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.307 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.307 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.309 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.310 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.311 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.312 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.312 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:13.313 [main] IdentifierGeneratorHelper - Natively generated identity: 212
[DEBUG] 2021-03-11 14:41:13.313 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.314 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.314 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.314 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.314 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.314 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.314 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.314 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=212, user=entity.Users#378}
[DEBUG] 2021-03-11 14:41:13.316 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.317 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.317 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.317 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.319 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.319 [main] Loader - Result row: EntityKey[entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.320 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.320 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.322 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.323 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.323 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.324 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.324 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.324 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.324 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.324 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#378
[DEBUG] 2021-03-11 14:41:13.324 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.325 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.326 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.326 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.328 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.328 [main] Loader - Result row: EntityKey[entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.328 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.328 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.328 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.328 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.329 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.329 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.329 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.329 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.330 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.330 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.330 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.331 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.331 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.331 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.331 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.331 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#378
[DEBUG] 2021-03-11 14:41:13.331 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.332 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.333 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.333 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.333 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.334 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-03-11 14:41:13.335 [main] IdentifierGeneratorHelper - Natively generated identity: 213
[DEBUG] 2021-03-11 14:41:13.335 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.335 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.335 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.336 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.336 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.336 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-11 14:41:13.336 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.336 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Street Tacos, id=213, user=entity.Users#378}
[DEBUG] 2021-03-11 14:41:13.338 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.339 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.340 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.340 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-03-11 14:41:13.342 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.342 [main] Loader - Result row: EntityKey[entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.343 [main] Loader - Result set row: 1
[DEBUG] 2021-03-11 14:41:13.343 [main] Loader - Result row: EntityKey[entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.344 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.344 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.346 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.346 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.347 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.347 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-11 14:41:13.347 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.347 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.348 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.348 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.348 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.348 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.348 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.349 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#378
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Street Tacos
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.349 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.350 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.369 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.369 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.370 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.370 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.372 [main] IdentifierGeneratorHelper - Natively generated identity: 379
[DEBUG] 2021-03-11 14:41:13.372 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.372 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.372 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.373 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.373 [main] Collections - Collection found: [entity.Users.recipes#379], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.373 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.373 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.373 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.373 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=379, username=Manji}
[DEBUG] 2021-03-11 14:41:13.373 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#379]
[DEBUG] 2021-03-11 14:41:13.373 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.375 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.376 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.377 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.379 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.379 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.379 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#379]
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#379]
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.380 [main] TwoPhaseLoad - Done materializing entity [entity.Users#379]
[DEBUG] 2021-03-11 14:41:13.380 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.380 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#379]
[DEBUG] 2021-03-11 14:41:13.380 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.381 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.381 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#379
[DEBUG] 2021-03-11 14:41:13.381 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.382 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.383 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.384 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.385 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.385 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.385 [main] Collections - Collection dereferenced: [entity.Users.recipes#379]
[DEBUG] 2021-03-11 14:41:13.385 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.385 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.385 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.386 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=379, username=Manji}
[DEBUG] 2021-03-11 14:41:13.386 [main] SQL - delete from Users where id=?
[DEBUG] 2021-03-11 14:41:13.390 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.391 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.392 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-11 14:41:13.392 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.394 [main] CollectionLoadContext - No collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.394 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.394 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#379
[DEBUG] 2021-03-11 14:41:13.395 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.397 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.399 [main] CollectionLoadContext - No collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.399 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.399 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#379
[DEBUG] 2021-03-11 14:41:13.399 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.403 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.403 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.404 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.404 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.408 [main] IdentifierGeneratorHelper - Natively generated identity: 380
[DEBUG] 2021-03-11 14:41:13.409 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.409 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.409 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.410 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.410 [main] Collections - Collection found: [entity.Users.recipes#380], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.410 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.410 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.410 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.410 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=380, username=Manji}
[DEBUG] 2021-03-11 14:41:13.410 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.410 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.413 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.413 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.414 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.416 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.416 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.416 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.416 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.417 [main] TwoPhaseLoad - Done materializing entity [entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.417 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.417 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.417 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.417 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.417 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#380
[DEBUG] 2021-03-11 14:41:13.417 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.419 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.419 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.420 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.420 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.420 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.420 [main] Collections - Collection found: [entity.Users.recipes#380], was: [entity.Users.recipes#380] (initialized)
[DEBUG] 2021-03-11 14:41:13.420 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.420 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.420 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.421 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=380, username=The Big Lebowski}
[DEBUG] 2021-03-11 14:41:13.421 [main] SQL - update Users set password=?, username=? where id=?
[DEBUG] 2021-03-11 14:41:13.424 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.425 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.426 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.username like :param0
[DEBUG] 2021-03-11 14:41:13.426 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Users as generatedAlias0 where generatedAlias0.username like :param0
[DEBUG] 2021-03-11 14:41:13.427 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:13.427 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-11 14:41:13.427 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:13.428 [main] FromElement - FromClause{level=1} : entity.Users (generatedAlias0) -> users0_
[DEBUG] 2021-03-11 14:41:13.428 [main] FromReferenceNode - Resolved : generatedAlias0 -> users0_.id
[DEBUG] 2021-03-11 14:41:13.428 [main] FromReferenceNode - Resolved : generatedAlias0 -> users0_.id
[DEBUG] 2021-03-11 14:41:13.429 [main] DotNode - getDataType() : username -> org.hibernate.type.StringType@5c18d6d4
[DEBUG] 2021-03-11 14:41:13.429 [main] FromReferenceNode - Resolved : generatedAlias0.username -> users0_.username
[DEBUG] 2021-03-11 14:41:13.429 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:13.429 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} users0_.id ) ( FromClause{level=1} Users users0_ ) ( where ( like ( users0_.username users0_.id username ) ? ) ) )
[DEBUG] 2021-03-11 14:41:13.429 [main] JoinProcessor - Using FROM fragment [Users users0_]
[DEBUG] 2021-03-11 14:41:13.429 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:13.429 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.id as id1_1_' {alias=generatedAlias0, className=entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_1_, users0_.username as username3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=users0_,origin=null,columns={,className=entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=users0_,className=entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.id' {alias=generatedAlias0, className=entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5c18d6d4}

[DEBUG] 2021-03-11 14:41:13.430 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:13.430 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Users as generatedAlias0 where generatedAlias0.username like :param0
[DEBUG] 2021-03-11 14:41:13.430 [main] QueryTranslatorImpl - SQL: select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_ where users0_.username like ?
[DEBUG] 2021-03-11 14:41:13.430 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:13.430 [main] SQL - select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_ where users0_.username like ?
[DEBUG] 2021-03-11 14:41:13.432 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.432 [main] Loader - Result row: EntityKey[entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.432 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.432 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.432 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.433 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.433 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.433 [main] TwoPhaseLoad - Processing attribute `username` : value = The Big Lebowski
[DEBUG] 2021-03-11 14:41:13.433 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.433 [main] TwoPhaseLoad - Done materializing entity [entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.433 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.433 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.434 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.434 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.434 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.434 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.435 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.435 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.435 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.436 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.438 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.438 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.439 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Processing attribute `username` : value = The Big Lebowski
[DEBUG] 2021-03-11 14:41:13.439 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.440 [main] TwoPhaseLoad - Done materializing entity [entity.Users#380]
[DEBUG] 2021-03-11 14:41:13.440 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.440 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.440 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.440 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.440 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#380
[DEBUG] 2021-03-11 14:41:13.440 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.442 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.442 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.443 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.443 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.443 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.443 [main] Collections - Collection dereferenced: [entity.Users.recipes#380]
[DEBUG] 2021-03-11 14:41:13.443 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.443 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.443 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.444 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=380, username=The Big Lebowski}
[DEBUG] 2021-03-11 14:41:13.444 [main] SQL - delete from Users where id=?
[DEBUG] 2021-03-11 14:41:13.446 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.447 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.447 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-11 14:41:13.448 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.449 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.450 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.450 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.451 [main] IdentifierGeneratorHelper - Natively generated identity: 381
[DEBUG] 2021-03-11 14:41:13.451 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.452 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.452 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.452 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.452 [main] Collections - Collection found: [entity.Users.recipes#381], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.452 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.452 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.453 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.453 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=381, username=Manji}
[DEBUG] 2021-03-11 14:41:13.453 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.453 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.454 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.455 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.456 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.username like :param0
[DEBUG] 2021-03-11 14:41:13.456 [main] SQL - select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_ where users0_.username like ?
[DEBUG] 2021-03-11 14:41:13.458 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.458 [main] Loader - Result row: EntityKey[entity.Users#381]
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#381]
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.459 [main] TwoPhaseLoad - Done materializing entity [entity.Users#381]
[DEBUG] 2021-03-11 14:41:13.459 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.460 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.461 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.461 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.461 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.461 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.461 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.461 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.461 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.463 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.465 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.466 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.466 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#381]
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.466 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.467 [main] TwoPhaseLoad - Done materializing entity [entity.Users#381]
[DEBUG] 2021-03-11 14:41:13.467 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.467 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.467 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.467 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.467 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#381
[DEBUG] 2021-03-11 14:41:13.467 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.469 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.469 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.470 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.471 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.471 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.471 [main] Collections - Collection dereferenced: [entity.Users.recipes#381]
[DEBUG] 2021-03-11 14:41:13.471 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.471 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.471 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.471 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=381, username=Manji}
[DEBUG] 2021-03-11 14:41:13.472 [main] SQL - delete from Users where id=?
[DEBUG] 2021-03-11 14:41:13.477 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.477 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.478 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-11 14:41:13.479 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.479 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.480 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.480 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.481 [main] IdentifierGeneratorHelper - Natively generated identity: 382
[DEBUG] 2021-03-11 14:41:13.481 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.482 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.482 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.482 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.482 [main] Collections - Collection found: [entity.Users.recipes#382], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.482 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.482 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.482 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.482 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=382, username=Manji}
[DEBUG] 2021-03-11 14:41:13.482 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.482 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.484 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.484 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.485 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.485 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Users as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.486 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:13.486 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Users'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-11 14:41:13.487 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:13.487 [main] FromElement - FromClause{level=1} : entity.Users (generatedAlias0) -> users0_
[DEBUG] 2021-03-11 14:41:13.488 [main] FromReferenceNode - Resolved : generatedAlias0 -> users0_.id
[DEBUG] 2021-03-11 14:41:13.488 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:13.488 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} users0_.id ) ( FromClause{level=1} Users users0_ ) )
[DEBUG] 2021-03-11 14:41:13.488 [main] JoinProcessor - Using FROM fragment [Users users0_]
[DEBUG] 2021-03-11 14:41:13.488 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-11 14:41:13.489 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.id as id1_1_' {alias=generatedAlias0, className=entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_1_, users0_.username as username3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=users0_,origin=null,columns={,className=entity.Users}}

[DEBUG] 2021-03-11 14:41:13.489 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:13.489 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Users as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.489 [main] QueryTranslatorImpl - SQL: select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_
[DEBUG] 2021-03-11 14:41:13.489 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-11 14:41:13.490 [main] SQL - select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_
[DEBUG] 2021-03-11 14:41:13.492 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.492 [main] Loader - Result row: EntityKey[entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.492 [main] Loader - Result set row: 1
[DEBUG] 2021-03-11 14:41:13.492 [main] Loader - Result row: EntityKey[entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.493 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.494 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.494 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.494 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.494 [main] TwoPhaseLoad - Done materializing entity [entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.494 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.494 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.496 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.496 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.496 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.496 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.496 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.496 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.496 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.496 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.498 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.498 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.498 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.498 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-11 14:41:13.499 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.499 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.500 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.500 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Street Tacos
[DEBUG] 2021-03-11 14:41:13.500 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.500 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.500 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.500 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.500 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.500 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.500 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.500 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.500 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.500 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.502 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.502 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.503 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.503 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.504 [main] IdentifierGeneratorHelper - Natively generated identity: 383
[DEBUG] 2021-03-11 14:41:13.505 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.505 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.505 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.505 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.505 [main] Collections - Collection found: [entity.Users.recipes#383], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.506 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.506 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.506 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.506 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=383, username=lucy}
[DEBUG] 2021-03-11 14:41:13.506 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.506 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.508 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.509 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.509 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.509 [main] SQL - select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_
[DEBUG] 2021-03-11 14:41:13.511 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.511 [main] Loader - Result row: EntityKey[entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.512 [main] Loader - Result set row: 1
[DEBUG] 2021-03-11 14:41:13.512 [main] Loader - Result row: EntityKey[entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.512 [main] Loader - Result set row: 2
[DEBUG] 2021-03-11 14:41:13.512 [main] Loader - Result row: EntityKey[entity.Users#383]
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.512 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Done materializing entity [entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#383]
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Processing attribute `username` : value = lucy
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.513 [main] TwoPhaseLoad - Done materializing entity [entity.Users#383]
[DEBUG] 2021-03-11 14:41:13.514 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.514 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.515 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.516 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.516 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.516 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.516 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.516 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.516 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.516 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.518 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.518 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.518 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.518 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.518 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.518 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.518 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.518 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.522 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.522 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.522 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.523 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-11 14:41:13.523 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.524 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.524 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.525 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.525 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.525 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.525 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.525 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Street Tacos
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.526 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.526 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.526 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.526 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.526 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.526 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.527 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.528 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.530 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.530 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.531 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.531 [main] TwoPhaseLoad - Done materializing entity [entity.Users#382]
[DEBUG] 2021-03-11 14:41:13.531 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.531 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.531 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.531 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.531 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#382
[DEBUG] 2021-03-11 14:41:13.531 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.533 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.533 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.534 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.534 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.534 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.534 [main] Collections - Collection dereferenced: [entity.Users.recipes#382]
[DEBUG] 2021-03-11 14:41:13.534 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.534 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.534 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.534 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=382, username=Manji}
[DEBUG] 2021-03-11 14:41:13.534 [main] SQL - delete from Users where id=?
[DEBUG] 2021-03-11 14:41:13.537 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.538 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.538 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-11 14:41:13.541 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.541 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.542 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.542 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.543 [main] IdentifierGeneratorHelper - Natively generated identity: 384
[DEBUG] 2021-03-11 14:41:13.543 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.543 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.544 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.544 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.544 [main] Collections - Collection found: [entity.Users.recipes#384], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.544 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.544 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.544 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.544 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=384, username=Manji}
[DEBUG] 2021-03-11 14:41:13.544 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.544 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.545 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.546 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.547 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0
[DEBUG] 2021-03-11 14:41:13.547 [main] SQL - select users0_.id as id1_1_, users0_.password as password2_1_, users0_.username as username3_1_ from Users users0_
[DEBUG] 2021-03-11 14:41:13.549 [main] Loader - Result set row: 0
[DEBUG] 2021-03-11 14:41:13.549 [main] Loader - Result row: EntityKey[entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.549 [main] Loader - Result set row: 1
[DEBUG] 2021-03-11 14:41:13.549 [main] Loader - Result row: EntityKey[entity.Users#383]
[DEBUG] 2021-03-11 14:41:13.549 [main] Loader - Result set row: 2
[DEBUG] 2021-03-11 14:41:13.550 [main] Loader - Result row: EntityKey[entity.Users#384]
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Done materializing entity [entity.Users#378]
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#383]
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `username` : value = lucy
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Done materializing entity [entity.Users#383]
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#384]
[DEBUG] 2021-03-11 14:41:13.550 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.551 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.551 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.551 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.551 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.551 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.551 [main] TwoPhaseLoad - Done materializing entity [entity.Users#384]
[DEBUG] 2021-03-11 14:41:13.551 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.551 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.552 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.552 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.552 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.553 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.553 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.553 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.553 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.553 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.554 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.555 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.555 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#383]
[DEBUG] 2021-03-11 14:41:13.555 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.555 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.555 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.555 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.555 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-03-11 14:41:13.557 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.557 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.557 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.557 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-11 14:41:13.558 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.558 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#212]
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Street Tacos
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Processing attribute `user` : value = 378
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.559 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#213]
[DEBUG] 2021-03-11 14:41:13.559 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.559 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#378]
[DEBUG] 2021-03-11 14:41:13.559 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.559 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.559 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-11 14:41:13.559 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.561 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.563 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.563 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.564 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#384]
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.564 [main] TwoPhaseLoad - Done materializing entity [entity.Users#384]
[DEBUG] 2021-03-11 14:41:13.565 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.565 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.565 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.565 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.565 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#384
[DEBUG] 2021-03-11 14:41:13.565 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.567 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.567 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.572 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.572 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.572 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.572 [main] Collections - Collection dereferenced: [entity.Users.recipes#384]
[DEBUG] 2021-03-11 14:41:13.572 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.572 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.572 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.572 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=384, username=Manji}
[DEBUG] 2021-03-11 14:41:13.573 [main] SQL - delete from Users where id=?
[DEBUG] 2021-03-11 14:41:13.576 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.577 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.577 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-11 14:41:13.578 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.578 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.579 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-11 14:41:13.579 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-03-11 14:41:13.580 [main] IdentifierGeneratorHelper - Natively generated identity: 385
[DEBUG] 2021-03-11 14:41:13.581 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.581 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.581 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.581 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.581 [main] Collections - Collection found: [entity.Users.recipes#385], was: [<unreferenced>] (initialized)
[DEBUG] 2021-03-11 14:41:13.581 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.581 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.582 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.582 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=385, username=Manji}
[DEBUG] 2021-03-11 14:41:13.582 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#385]
[DEBUG] 2021-03-11 14:41:13.582 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-03-11 14:41:13.582 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.583 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.584 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.585 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.585 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.586 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#385]
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#385]
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.586 [main] TwoPhaseLoad - Done materializing entity [entity.Users#385]
[DEBUG] 2021-03-11 14:41:13.586 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.586 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#385]
[DEBUG] 2021-03-11 14:41:13.586 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.586 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.586 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#385
[DEBUG] 2021-03-11 14:41:13.586 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.587 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-03-11 14:41:13.589 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-11 14:41:13.590 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-11 14:41:13.590 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#385]
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#385]
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Processing attribute `username` : value = Manji
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-11 14:41:13.590 [main] TwoPhaseLoad - Done materializing entity [entity.Users#385]
[DEBUG] 2021-03-11 14:41:13.590 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.590 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#385]
[DEBUG] 2021-03-11 14:41:13.590 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-03-11 14:41:13.590 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-11 14:41:13.590 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#385
[DEBUG] 2021-03-11 14:41:13.590 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.591 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-11 14:41:13.592 [main] TransactionImpl - begin
[DEBUG] 2021-03-11 14:41:13.593 [main] TransactionImpl - committing
[DEBUG] 2021-03-11 14:41:13.593 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-11 14:41:13.593 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-11 14:41:13.593 [main] Collections - Collection dereferenced: [entity.Users.recipes#385]
[DEBUG] 2021-03-11 14:41:13.593 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-11 14:41:13.593 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2021-03-11 14:41:13.593 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-11 14:41:13.593 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=385, username=Manji}
[DEBUG] 2021-03-11 14:41:13.594 [main] SQL - delete from Users where id=?
[DEBUG] 2021-03-11 14:41:13.598 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.599 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-11 14:41:13.599 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
