[DEBUG] 2021-02-21 15:20:33.042 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-02-21 15:20:33.056 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-02-21 15:20:33.064 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-02-21 15:20:33.222 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-02-21 15:20:33.226 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-02-21 15:20:33.693 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-02-21 15:20:34.218 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-02-21 15:20:34.249 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-02-21 15:20:34.251 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-02-21 15:20:34.279 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-02-21 15:20:34.337 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@31da6b2e
[DEBUG] 2021-02-21 15:20:34.337 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@31da6b2e
[DEBUG] 2021-02-21 15:20:34.337 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@31da6b2e
[DEBUG] 2021-02-21 15:20:34.338 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48c3205a
[DEBUG] 2021-02-21 15:20:34.338 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d746ce4
[DEBUG] 2021-02-21 15:20:34.339 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@49798e84
[DEBUG] 2021-02-21 15:20:34.340 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67403656
[DEBUG] 2021-02-21 15:20:34.340 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67403656
[DEBUG] 2021-02-21 15:20:34.340 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67403656
[DEBUG] 2021-02-21 15:20:34.341 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@77b9d0c7
[DEBUG] 2021-02-21 15:20:34.342 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@77b9d0c7
[DEBUG] 2021-02-21 15:20:34.342 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@77b9d0c7
[DEBUG] 2021-02-21 15:20:34.344 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6a2eea2a
[DEBUG] 2021-02-21 15:20:34.345 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6a2eea2a
[DEBUG] 2021-02-21 15:20:34.345 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6a2eea2a
[DEBUG] 2021-02-21 15:20:34.347 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b760460
[DEBUG] 2021-02-21 15:20:34.347 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b760460
[DEBUG] 2021-02-21 15:20:34.347 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b760460
[DEBUG] 2021-02-21 15:20:34.349 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3b7b05a8
[DEBUG] 2021-02-21 15:20:34.349 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3b7b05a8
[DEBUG] 2021-02-21 15:20:34.349 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3b7b05a8
[DEBUG] 2021-02-21 15:20:34.350 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4567e53d
[DEBUG] 2021-02-21 15:20:34.351 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4567e53d
[DEBUG] 2021-02-21 15:20:34.351 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4567e53d
[DEBUG] 2021-02-21 15:20:34.352 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66ec9390
[DEBUG] 2021-02-21 15:20:34.352 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66ec9390
[DEBUG] 2021-02-21 15:20:34.353 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66ec9390
[DEBUG] 2021-02-21 15:20:34.353 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f7dcef2
[DEBUG] 2021-02-21 15:20:34.354 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f7dcef2
[DEBUG] 2021-02-21 15:20:34.355 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b4786dd
[DEBUG] 2021-02-21 15:20:34.355 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b4786dd
[DEBUG] 2021-02-21 15:20:34.356 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1f38957
[DEBUG] 2021-02-21 15:20:34.357 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f38957
[DEBUG] 2021-02-21 15:20:34.357 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@518cf84a
[DEBUG] 2021-02-21 15:20:34.358 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57ce634f
[DEBUG] 2021-02-21 15:20:34.359 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6fd1660
[DEBUG] 2021-02-21 15:20:34.360 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6fd1660
[DEBUG] 2021-02-21 15:20:34.361 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@60d1b21f
[DEBUG] 2021-02-21 15:20:34.362 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60d1b21f
[DEBUG] 2021-02-21 15:20:34.374 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@57b75756
[DEBUG] 2021-02-21 15:20:34.374 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@57b75756
[DEBUG] 2021-02-21 15:20:34.377 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@17271176
[DEBUG] 2021-02-21 15:20:34.377 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@17271176
[DEBUG] 2021-02-21 15:20:34.380 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67c277a0
[DEBUG] 2021-02-21 15:20:34.380 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67c277a0
[DEBUG] 2021-02-21 15:20:34.381 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7baf6acf
[DEBUG] 2021-02-21 15:20:34.382 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7baf6acf
[DEBUG] 2021-02-21 15:20:34.383 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22bb5646
[DEBUG] 2021-02-21 15:20:34.383 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22bb5646
[DEBUG] 2021-02-21 15:20:34.385 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2bc9a775
[DEBUG] 2021-02-21 15:20:34.385 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2bc9a775
[DEBUG] 2021-02-21 15:20:34.387 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b36e000
[DEBUG] 2021-02-21 15:20:34.387 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b36e000
[DEBUG] 2021-02-21 15:20:34.389 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5da7cee2
[DEBUG] 2021-02-21 15:20:34.389 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5da7cee2
[DEBUG] 2021-02-21 15:20:34.390 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7ad54c55
[DEBUG] 2021-02-21 15:20:34.391 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7ad54c55
[DEBUG] 2021-02-21 15:20:34.392 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c0f79f0
[DEBUG] 2021-02-21 15:20:34.392 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c0f79f0
[DEBUG] 2021-02-21 15:20:34.392 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c0f79f0
[DEBUG] 2021-02-21 15:20:34.395 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29a69a35
[DEBUG] 2021-02-21 15:20:34.396 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@b18c4
[DEBUG] 2021-02-21 15:20:34.396 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b18c4
[DEBUG] 2021-02-21 15:20:34.396 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b18c4
[DEBUG] 2021-02-21 15:20:34.397 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7bbbb6a8
[DEBUG] 2021-02-21 15:20:34.398 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@314ed053
[DEBUG] 2021-02-21 15:20:34.398 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@314ed053
[DEBUG] 2021-02-21 15:20:34.399 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@dca2615
[DEBUG] 2021-02-21 15:20:34.399 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@dca2615
[DEBUG] 2021-02-21 15:20:34.400 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d96d872
[DEBUG] 2021-02-21 15:20:34.400 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d96d872
[DEBUG] 2021-02-21 15:20:34.401 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dc2de84
[DEBUG] 2021-02-21 15:20:34.402 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dc2de84
[DEBUG] 2021-02-21 15:20:34.402 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44de0113
[DEBUG] 2021-02-21 15:20:34.402 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44de0113
[DEBUG] 2021-02-21 15:20:34.403 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42b21d99
[DEBUG] 2021-02-21 15:20:34.404 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3162743f
[DEBUG] 2021-02-21 15:20:34.404 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3162743f
[DEBUG] 2021-02-21 15:20:34.405 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3162743f
[DEBUG] 2021-02-21 15:20:34.405 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b29d52b
[DEBUG] 2021-02-21 15:20:34.406 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b29d52b
[DEBUG] 2021-02-21 15:20:34.406 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b29d52b
[DEBUG] 2021-02-21 15:20:34.407 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@c6e0f32
[DEBUG] 2021-02-21 15:20:34.408 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@63fdffcd
[DEBUG] 2021-02-21 15:20:34.409 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2a9bc08f
[DEBUG] 2021-02-21 15:20:34.409 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2a9bc08f
[DEBUG] 2021-02-21 15:20:34.409 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2a9bc08f
[DEBUG] 2021-02-21 15:20:34.410 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77cb9cd1
[DEBUG] 2021-02-21 15:20:34.410 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77cb9cd1
[DEBUG] 2021-02-21 15:20:34.410 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77cb9cd1
[DEBUG] 2021-02-21 15:20:34.411 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e4f80cb
[DEBUG] 2021-02-21 15:20:34.411 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@c6a6c1d
[DEBUG] 2021-02-21 15:20:34.413 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@10667848
[DEBUG] 2021-02-21 15:20:34.413 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10667848
[DEBUG] 2021-02-21 15:20:34.413 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66bacdbc
[DEBUG] 2021-02-21 15:20:34.415 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2116b68b
[DEBUG] 2021-02-21 15:20:34.415 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2116b68b
[DEBUG] 2021-02-21 15:20:34.417 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@47ec7422
[DEBUG] 2021-02-21 15:20:34.417 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47ec7422
[DEBUG] 2021-02-21 15:20:34.419 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b56f5f8
[DEBUG] 2021-02-21 15:20:34.419 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1aa99005
[DEBUG] 2021-02-21 15:20:34.421 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@cfbc8e8
[DEBUG] 2021-02-21 15:20:34.424 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2b61a019
[DEBUG] 2021-02-21 15:20:34.424 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b61a019
[DEBUG] 2021-02-21 15:20:34.425 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6fd5717c
[DEBUG] 2021-02-21 15:20:34.425 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e2f86e6
[DEBUG] 2021-02-21 15:20:34.425 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d774249
[DEBUG] 2021-02-21 15:20:34.425 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@17b64941
[DEBUG] 2021-02-21 15:20:34.425 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53ac845a
[DEBUG] 2021-02-21 15:20:34.425 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5136207f
[DEBUG] 2021-02-21 15:20:34.426 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26a4551a
[DEBUG] 2021-02-21 15:20:34.426 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3fdecce
[DEBUG] 2021-02-21 15:20:34.456 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-02-21 15:20:34.456 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-02-21 15:20:34.457 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-02-21 15:20:34.457 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-02-21 15:20:34.458 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-02-21 15:20:34.459 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-02-21 15:20:34.460 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-02-21 15:20:34.463 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-02-21 15:20:34.465 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-02-21 15:20:34.466 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-02-21 15:20:34.468 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-02-21 15:20:34.469 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-02-21 15:20:34.469 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-02-21 15:20:34.470 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-02-21 15:20:34.476 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_mealBuilder
[INFO ] 2021-02-21 15:20:34.477 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-02-21 15:20:34.478 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-02-21 15:20:34.621 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-02-21 15:20:35.285 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-02-21 15:20:35.286 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2021-02-21 15:20:35.286 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-02-21 15:20:35.320 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-02-21 15:20:35.349 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-02-21 15:20:35.376 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-02-21 15:20:35.427 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-02-21 15:20:35.431 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4339baec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62db3891]
[DEBUG] 2021-02-21 15:20:35.484 [main] AnnotationBinder - Binding entity from annotated class: entity.Users
[DEBUG] 2021-02-21 15:20:35.508 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-02-21 15:20:35.513 [main] EntityBinder - Import with entity name Users
[DEBUG] 2021-02-21 15:20:35.516 [main] EntityBinder - Bind entity entity.Users on table Users
[DEBUG] 2021-02-21 15:20:35.550 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.553 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-02-21 15:20:35.555 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Users:id]
[DEBUG] 2021-02-21 15:20:35.557 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-02-21 15:20:35.561 [main] PropertyBinder - Building property id
[DEBUG] 2021-02-21 15:20:35.567 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-02-21 15:20:35.569 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.569 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-02-21 15:20:35.569 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Users:password]
[DEBUG] 2021-02-21 15:20:35.569 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-02-21 15:20:35.569 [main] PropertyBinder - Building property password
[DEBUG] 2021-02-21 15:20:35.571 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='Users_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-02-21 15:20:35.571 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.572 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.582 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.583 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-02-21 15:20:35.585 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] 2021-02-21 15:20:35.586 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] 2021-02-21 15:20:35.586 [main] CollectionBinder - Collection role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:35.589 [main] PropertyBinder - Building property recipes
[DEBUG] 2021-02-21 15:20:35.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.590 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2021-02-21 15:20:35.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Users:username]
[DEBUG] 2021-02-21 15:20:35.590 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2021-02-21 15:20:35.590 [main] PropertyBinder - Building property username
[DEBUG] 2021-02-21 15:20:35.591 [main] AnnotationBinder - Binding entity from annotated class: entity.Recipes
[DEBUG] 2021-02-21 15:20:35.592 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-02-21 15:20:35.592 [main] EntityBinder - Import with entity name Recipes
[DEBUG] 2021-02-21 15:20:35.592 [main] EntityBinder - Bind entity entity.Recipes on table Recipes
[DEBUG] 2021-02-21 15:20:35.594 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=recipe_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.595 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-02-21 15:20:35.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Recipes:id]
[DEBUG] 2021-02-21 15:20:35.595 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-02-21 15:20:35.595 [main] PropertyBinder - Building property id
[DEBUG] 2021-02-21 15:20:35.596 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(recipe_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-02-21 15:20:35.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=public_recipe, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.596 [main] PropertyBinder - MetadataSourceProcessor property public_recipe with lazy=false
[DEBUG] 2021-02-21 15:20:35.596 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Recipes:public_recipe]
[DEBUG] 2021-02-21 15:20:35.596 [main] SimpleValueBinder - building SimpleValue for public_recipe
[DEBUG] 2021-02-21 15:20:35.597 [main] PropertyBinder - Building property public_recipe
[DEBUG] 2021-02-21 15:20:35.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=recipe_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.597 [main] PropertyBinder - MetadataSourceProcessor property recipe_name with lazy=false
[DEBUG] 2021-02-21 15:20:35.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Recipes:recipe_name]
[DEBUG] 2021-02-21 15:20:35.597 [main] SimpleValueBinder - building SimpleValue for recipe_name
[DEBUG] 2021-02-21 15:20:35.597 [main] PropertyBinder - Building property recipe_name
[DEBUG] 2021-02-21 15:20:35.598 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='Users_id', referencedColumn='', mappedBy=''}
[DEBUG] 2021-02-21 15:20:35.598 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-02-21 15:20:35.601 [main] PropertyBinder - Building property user
[DEBUG] 2021-02-21 15:20:35.603 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-02-21 15:20:35.603 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-02-21 15:20:35.603 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2021-02-21 15:20:35.603 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-02-21 15:20:35.603 [main] SimpleValueBinder - Starting fillSimpleValue for public_recipe
[DEBUG] 2021-02-21 15:20:35.604 [main] SimpleValueBinder - Starting fillSimpleValue for recipe_name
[DEBUG] 2021-02-21 15:20:35.607 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2021-02-21 15:20:35.608 [main] PrimaryKey - Forcing column [recipe_id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2021-02-21 15:20:35.608 [main] CollectionSecondPass - Second pass for collection: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:35.608 [main] CollectionBinder - Binding a OneToMany: entity.Users.recipes through a foreign key
[DEBUG] 2021-02-21 15:20:35.609 [main] CollectionBinder - Mapping collection: entity.Users.recipes -> Recipes
[DEBUG] 2021-02-21 15:20:35.610 [main] CollectionSecondPass - Mapped collection key: Users_id, one-to-many: entity.Recipes
[DEBUG] 2021-02-21 15:20:35.610 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Users
[DEBUG] 2021-02-21 15:20:35.614 [main] InFlightMetadataCollectorImpl - Resolving reference to class: entity.Users
[DEBUG] 2021-02-21 15:20:35.651 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-02-21 15:20:35.652 [main] Settings - SessionFactory name : null
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Statistics: disabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-02-21 15:20:35.653 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Named query checking : enabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-02-21 15:20:35.654 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-02-21 15:20:35.655 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-02-21 15:20:35.716 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-02-21 15:20:35.735 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-02-21 15:20:35.736 [main] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/test-classes:/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder/target/classes:/Users/lisaandritsch/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/lisaandritsch/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/lisaandritsch/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/lisaandritsch/.m2/repository/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar:/Users/lisaandritsch/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/Users/lisaandritsch/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/lisaandritsch/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/Users/lisaandritsch/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/Users/lisaandritsch/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/lisaandritsch/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/Users/lisaandritsch/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/lisaandritsch/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/lisaandritsch/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/lisaandritsch/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/Users/lisaandritsch/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/lisaandritsch/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/lisaandritsch/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/lisaandritsch/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/lisaandritsch/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/lisaandritsch/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/lisaandritsch/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/lisaandritsch/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/lisaandritsch/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/lisaandritsch/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/lisaandritsch/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/lisaandritsch/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/Users/lisaandritsch/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/Users/lisaandritsch/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://openjdk.java.net/, user.timezone=America/Chicago, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 persistence.RecipesDAOTest,saveOrUpdate, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/lisaandritsch, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=1LoveBacon!, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.9+7-LTS, user.name=lisaandritsch, path.separator=:, hibernate.connection.username=****, os.version=10.15.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_mealBuilder, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/t1/cf3c018n3358k026jslb5qb00000gn/T/, java.version=11.0.9, user.dir=/Users/lisaandritsch/Desktop/Java/MealAndGroceryBuilder, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@28369db0, java.library.path=/Users/lisaandritsch/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.9+7-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/test_mealBuilder, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2021-02-21 15:20:35.755 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-02-21 15:20:35.756 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-02-21 15:20:35.757 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-02-21 15:20:35.757 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4339baec] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@239f017e]
[DEBUG] 2021-02-21 15:20:35.816 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Recipes] is safe
[DEBUG] 2021-02-21 15:20:35.817 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Recipes
[DEBUG] 2021-02-21 15:20:35.835 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Recipes] is safe
[DEBUG] 2021-02-21 15:20:35.835 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Recipes
[DEBUG] 2021-02-21 15:20:36.087 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Users] is safe
[DEBUG] 2021-02-21 15:20:36.087 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Users
[DEBUG] 2021-02-21 15:20:36.088 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Users] is safe
[DEBUG] 2021-02-21 15:20:36.088 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Users
[DEBUG] 2021-02-21 15:20:36.125 [main] AbstractCollectionPersister - Static SQL for collection: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.125 [main] AbstractCollectionPersister -  Row insert: update Recipes set Users_id=? where recipe_id=?
[DEBUG] 2021-02-21 15:20:36.125 [main] AbstractCollectionPersister -  Row update: update Recipes set  where recipe_id=?
[DEBUG] 2021-02-21 15:20:36.125 [main] AbstractCollectionPersister -  Row delete: update Recipes set Users_id=null where Users_id=? and recipe_id=?
[DEBUG] 2021-02-21 15:20:36.125 [main] AbstractCollectionPersister -  One-shot delete: update Recipes set Users_id=null where Users_id=?
[DEBUG] 2021-02-21 15:20:36.130 [main] AbstractEntityPersister - Static SQL for entity: entity.Recipes
[DEBUG] 2021-02-21 15:20:36.130 [main] AbstractEntityPersister -  Version select: select recipe_id from Recipes where recipe_id =?
[DEBUG] 2021-02-21 15:20:36.130 [main] AbstractEntityPersister -  Snapshot select: select recipes_.recipe_id, recipes_.public_recipe as public_r2_0_, recipes_.recipe_name as recipe_n3_0_, recipes_.Users_id as Users_id4_0_ from Recipes recipes_ where recipes_.recipe_id=?
[DEBUG] 2021-02-21 15:20:36.130 [main] AbstractEntityPersister -  Insert 0: insert into Recipes (public_recipe, recipe_name, Users_id, recipe_id) values (?, ?, ?, ?)
[DEBUG] 2021-02-21 15:20:36.131 [main] AbstractEntityPersister -  Update 0: update Recipes set public_recipe=?, recipe_name=?, Users_id=? where recipe_id=?
[DEBUG] 2021-02-21 15:20:36.131 [main] AbstractEntityPersister -  Delete 0: delete from Recipes where recipe_id=?
[DEBUG] 2021-02-21 15:20:36.131 [main] AbstractEntityPersister -  Identity insert: insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-02-21 15:20:36.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4315c28c]
[DEBUG] 2021-02-21 15:20:36.154 [main] MetamodelGraphWalker - Visiting attribute path : public_recipe
[DEBUG] 2021-02-21 15:20:36.155 [main] MetamodelGraphWalker - Visiting attribute path : recipe_name
[DEBUG] 2021-02-21 15:20:36.155 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-02-21 15:20:36.158 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15986dd5]
[DEBUG] 2021-02-21 15:20:36.160 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-02-21 15:20:36.160 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2021-02-21 15:20:36.160 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2021-02-21 15:20:36.160 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2021-02-21 15:20:36.161 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-02-21 15:20:36.174 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-02-21 15:20:36.179 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Recipes)
    - Returns
       - EntityReturnImpl(entity=entity.Recipes, querySpaceUid=<gen:0>, path=entity.Recipes)
          - EntityAttributeFetchImpl(entity=entity.Users, querySpaceUid=<gen:1>, path=entity.Recipes.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Users)
                - SQL table alias mapping - users1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2021-02-21 15:20:36.182 [main] EntityLoader - Static select for entity entity.Recipes [NONE]: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-02-21 15:20:36.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cfb0c4c]
[DEBUG] 2021-02-21 15:20:36.182 [main] MetamodelGraphWalker - Visiting attribute path : public_recipe
[DEBUG] 2021-02-21 15:20:36.182 [main] MetamodelGraphWalker - Visiting attribute path : recipe_name
[DEBUG] 2021-02-21 15:20:36.182 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-02-21 15:20:36.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b63abdc]
[DEBUG] 2021-02-21 15:20:36.183 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-02-21 15:20:36.183 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2021-02-21 15:20:36.183 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2021-02-21 15:20:36.183 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2021-02-21 15:20:36.183 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-02-21 15:20:36.183 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-02-21 15:20:36.184 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Recipes)
    - Returns
       - EntityReturnImpl(entity=entity.Recipes, querySpaceUid=<gen:0>, path=entity.Recipes)
          - EntityAttributeFetchImpl(entity=entity.Users, querySpaceUid=<gen:1>, path=entity.Recipes.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Users)
                - SQL table alias mapping - users1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2021-02-21 15:20:36.184 [main] EntityLoader - Static select for entity entity.Recipes [READ]: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-02-21 15:20:36.197 [main] Loader - Static select for action ACTION_MERGE on entity entity.Recipes: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_ from Recipes recipes0_ where recipes0_.recipe_id=?
[DEBUG] 2021-02-21 15:20:36.197 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Recipes: select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_ from Recipes recipes0_ where recipes0_.recipe_id=?
[DEBUG] 2021-02-21 15:20:36.198 [main] AbstractEntityPersister - Static SQL for entity: entity.Users
[DEBUG] 2021-02-21 15:20:36.198 [main] AbstractEntityPersister -  Version select: select id from Users where id =?
[DEBUG] 2021-02-21 15:20:36.198 [main] AbstractEntityPersister -  Snapshot select: select users_.id, users_.password as password2_1_, users_.username as username3_1_ from Users users_ where users_.id=?
[DEBUG] 2021-02-21 15:20:36.198 [main] AbstractEntityPersister -  Insert 0: insert into Users (password, username, id) values (?, ?, ?)
[DEBUG] 2021-02-21 15:20:36.198 [main] AbstractEntityPersister -  Update 0: update Users set password=?, username=? where id=?
[DEBUG] 2021-02-21 15:20:36.199 [main] AbstractEntityPersister -  Delete 0: delete from Users where id=?
[DEBUG] 2021-02-21 15:20:36.199 [main] AbstractEntityPersister -  Identity insert: insert into Users (password, username) values (?, ?)
[DEBUG] 2021-02-21 15:20:36.200 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cfc77]
[DEBUG] 2021-02-21 15:20:36.200 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-02-21 15:20:36.200 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2021-02-21 15:20:36.201 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f9a10df]
[DEBUG] 2021-02-21 15:20:36.202 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aebee4b]
[DEBUG] 2021-02-21 15:20:36.203 [main] MetamodelGraphWalker - Visiting attribute path : recipes.public_recipe
[DEBUG] 2021-02-21 15:20:36.203 [main] MetamodelGraphWalker - Visiting attribute path : recipes.recipe_name
[DEBUG] 2021-02-21 15:20:36.203 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2021-02-21 15:20:36.203 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2021-02-21 15:20:36.204 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2021-02-21 15:20:36.204 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-02-21 15:20:36.204 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-02-21 15:20:36.207 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Users)
    - Returns
       - EntityReturnImpl(entity=entity.Users, querySpaceUid=<gen:0>, path=entity.Users)
          - CollectionAttributeFetchImpl(collection=entity.Users.recipes, querySpaceUid=<gen:1>, path=entity.Users.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Recipes, querySpaceUid=<gen:2>, path=entity.Users.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=entity.Users.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {Users_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Recipes)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2021-02-21 15:20:36.207 [main] EntityLoader - Static select for entity entity.Users [NONE]: select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e545821]
[DEBUG] 2021-02-21 15:20:36.207 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-02-21 15:20:36.207 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2021-02-21 15:20:36.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76a7fcbd]
[DEBUG] 2021-02-21 15:20:36.208 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433ea2ac]
[DEBUG] 2021-02-21 15:20:36.208 [main] MetamodelGraphWalker - Visiting attribute path : recipes.public_recipe
[DEBUG] 2021-02-21 15:20:36.208 [main] MetamodelGraphWalker - Visiting attribute path : recipes.recipe_name
[DEBUG] 2021-02-21 15:20:36.208 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2021-02-21 15:20:36.208 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2021-02-21 15:20:36.208 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2021-02-21 15:20:36.208 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-02-21 15:20:36.208 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-02-21 15:20:36.209 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Users)
    - Returns
       - EntityReturnImpl(entity=entity.Users, querySpaceUid=<gen:0>, path=entity.Users)
          - CollectionAttributeFetchImpl(collection=entity.Users.recipes, querySpaceUid=<gen:1>, path=entity.Users.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Recipes, querySpaceUid=<gen:2>, path=entity.Users.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=entity.Users.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {Users_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=entity.Recipes)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2021-02-21 15:20:36.209 [main] EntityLoader - Static select for entity entity.Users [READ]: select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.211 [main] Loader - Static select for action ACTION_MERGE on entity entity.Users: select users0_.id as id1_1_1_, users0_.password as password2_1_1_, users0_.username as username3_1_1_, recipes1_.Users_id as Users_id4_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.public_recipe as public_r2_0_0_, recipes1_.recipe_name as recipe_n3_0_0_, recipes1_.Users_id as Users_id4_0_0_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.212 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Users: select users0_.id as id1_1_1_, users0_.password as password2_1_1_, users0_.username as username3_1_1_, recipes1_.Users_id as Users_id4_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.public_recipe as public_r2_0_0_, recipes1_.recipe_name as recipe_n3_0_0_, recipes1_.Users_id as Users_id4_0_0_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.217 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@372461a9]
[DEBUG] 2021-02-21 15:20:36.217 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fffb692]
[DEBUG] 2021-02-21 15:20:36.218 [main] MetamodelGraphWalker - Visiting attribute path : public_recipe
[DEBUG] 2021-02-21 15:20:36.218 [main] MetamodelGraphWalker - Visiting attribute path : recipe_name
[DEBUG] 2021-02-21 15:20:36.218 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-02-21 15:20:36.218 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-02-21 15:20:36.218 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-02-21 15:20:36.222 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-02-21 15:20:36.222 [main] LoadPlanTreePrinter - LoadPlan(collection=entity.Users.recipes)
    - Returns
       - CollectionReturnImpl(collection=entity.Users.recipes, querySpaceUid=<gen:0>, path=[entity.Users.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=entity.Recipes, querySpaceUid=<gen:1>, path=[entity.Users.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=entity.Users.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {Users_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - recipe_i1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=entity.Recipes)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {recipe_i1_0_1_}

[DEBUG] 2021-02-21 15:20:36.223 [main] CollectionLoader - Static select for collection entity.Users.recipes: select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-02-21 15:20:36.261 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-02-21 15:20:36.262 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-02-21 15:20:36.263 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-02-21 15:20:36.270 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-02-21 15:20:36.270 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-02-21 15:20:36.271 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-02-21 15:20:36.271 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-02-21 15:20:36.273 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69ed5ea2
[DEBUG] 2021-02-21 15:20:36.275 [main] SessionFactoryRegistry - Registering SessionFactory: bc1e2715-96c0-42c6-9b83-cb7c8e7914e2 (<unnamed>)
[DEBUG] 2021-02-21 15:20:36.275 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-02-21 15:20:36.417 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-02-21 15:20:36.445 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-02-21 15:20:36.464 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ab595c8
[DEBUG] 2021-02-21 15:20:36.493 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0
[DEBUG] 2021-02-21 15:20:36.501 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-02-21 15:20:36.509 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipes'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-02-21 15:20:36.532 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-02-21 15:20:36.557 [main] FromElement - FromClause{level=1} : entity.Recipes (generatedAlias0) -> recipes0_
[DEBUG] 2021-02-21 15:20:36.558 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipes0_.recipe_id
[DEBUG] 2021-02-21 15:20:36.560 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-02-21 15:20:36.560 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipes0_.recipe_id ) ( FromClause{level=1} Recipes recipes0_ ) )
[DEBUG] 2021-02-21 15:20:36.570 [main] JoinProcessor - Using FROM fragment [Recipes recipes0_]
[DEBUG] 2021-02-21 15:20:36.570 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-02-21 15:20:36.571 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipes0_.recipe_id as recipe_i1_0_' {alias=generatedAlias0, className=entity.Recipes, tableAlias=recipes0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipes0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Recipes recipes0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Recipes,tableAlias=recipes0_,origin=null,columns={,className=entity.Recipes}}

[DEBUG] 2021-02-21 15:20:36.571 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-02-21 15:20:36.578 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0
[DEBUG] 2021-02-21 15:20:36.578 [main] QueryTranslatorImpl - SQL: select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-02-21 15:20:36.578 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-02-21 15:20:36.599 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-02-21 15:20:36.628 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.634 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-02-21 15:20:36.634 [main] TransactionImpl - begin
[DEBUG] 2021-02-21 15:20:36.657 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-02-21 15:20:36.659 [main] SQL - insert into Users (password, username) values (?, ?)
[DEBUG] 2021-02-21 15:20:36.664 [main] IdentifierGeneratorHelper - Natively generated identity: 81
[DEBUG] 2021-02-21 15:20:36.665 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.667 [main] TransactionImpl - committing
[DEBUG] 2021-02-21 15:20:36.668 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-02-21 15:20:36.668 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-02-21 15:20:36.672 [main] Collections - Collection found: [entity.Users.recipes#81], was: [<unreferenced>] (initialized)
[DEBUG] 2021-02-21 15:20:36.674 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-02-21 15:20:36.674 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2021-02-21 15:20:36.675 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-02-21 15:20:36.675 [main] EntityPrinter - entity.Users{recipes=[], password=bananas, id=81, username=Lucy}
[DEBUG] 2021-02-21 15:20:36.676 [main] AbstractCollectionPersister - Inserting collection: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.676 [main] AbstractCollectionPersister - Collection was empty
[DEBUG] 2021-02-21 15:20:36.680 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.681 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.686 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.691 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-02-21 15:20:36.693 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-02-21 15:20:36.697 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.700 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.701 [main] TwoPhaseLoad - Done materializing entity [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.701 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.702 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.702 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.702 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.702 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#81
[DEBUG] 2021-02-21 15:20:36.702 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.704 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-02-21 15:20:36.705 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-02-21 15:20:36.707 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.709 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-02-21 15:20:36.709 [main] TransactionImpl - begin
[DEBUG] 2021-02-21 15:20:36.711 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-02-21 15:20:36.711 [main] SQL - insert into Recipes (public_recipe, recipe_name, Users_id) values (?, ?, ?)
[DEBUG] 2021-02-21 15:20:36.713 [main] IdentifierGeneratorHelper - Natively generated identity: 30
[DEBUG] 2021-02-21 15:20:36.713 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.714 [main] TransactionImpl - committing
[DEBUG] 2021-02-21 15:20:36.714 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-02-21 15:20:36.714 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-02-21 15:20:36.714 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-02-21 15:20:36.714 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-02-21 15:20:36.714 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-02-21 15:20:36.715 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=Chicken Tikka Masala, id=30, user=entity.Users#81}
[DEBUG] 2021-02-21 15:20:36.717 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.717 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.718 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0
[DEBUG] 2021-02-21 15:20:36.718 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_
[DEBUG] 2021-02-21 15:20:36.720 [main] Loader - Result set row: 0
[DEBUG] 2021-02-21 15:20:36.721 [main] Loader - Result row: EntityKey[entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.721 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.721 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-02-21 15:20:36.722 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.722 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-02-21 15:20:36.722 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.722 [main] TwoPhaseLoad - Processing attribute `user` : value = 81
[DEBUG] 2021-02-21 15:20:36.722 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.722 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.724 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-02-21 15:20:36.724 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-02-21 15:20:36.724 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.725 [main] TwoPhaseLoad - Done materializing entity [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.725 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.725 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.725 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.726 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.726 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#81
[DEBUG] 2021-02-21 15:20:36.726 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.726 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.729 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.public_recipe as public_r2_0_0_, recipes0_.recipe_name as recipe_n3_0_0_, recipes0_.Users_id as Users_id4_0_0_, users1_.id as id1_1_1_, users1_.password as password2_1_1_, users1_.username as username3_1_1_ from Recipes recipes0_ left outer join Users users1_ on recipes0_.Users_id=users1_.id where recipes0_.recipe_id=?
[DEBUG] 2021-02-21 15:20:36.733 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-02-21 15:20:36.734 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-02-21 15:20:36.735 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.735 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-02-21 15:20:36.735 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.735 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = Chicken Tikka Masala
[DEBUG] 2021-02-21 15:20:36.735 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Processing attribute `user` : value = 81
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-02-21 15:20:36.736 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.737 [main] TwoPhaseLoad - Done materializing entity [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.737 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.739 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.739 [main] SQL - select recipes0_.Users_id as Users_id4_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.public_recipe as public_r2_0_1_, recipes0_.recipe_name as recipe_n3_0_1_, recipes0_.Users_id as Users_id4_0_1_ from Recipes recipes0_ where recipes0_.Users_id=?
[DEBUG] 2021-02-21 15:20:36.741 [main] ResultSetProcessorImpl - Preparing collection initializer : [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.741 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-02-21 15:20:36.741 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.742 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.742 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.742 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.742 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.742 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-02-21 15:20:36.742 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Recipes#30
[DEBUG] 2021-02-21 15:20:36.742 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.775 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-02-21 15:20:36.775 [main] TransactionImpl - begin
[DEBUG] 2021-02-21 15:20:36.777 [main] TransactionImpl - committing
[DEBUG] 2021-02-21 15:20:36.777 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-02-21 15:20:36.777 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-02-21 15:20:36.778 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-02-21 15:20:36.778 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-02-21 15:20:36.778 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-02-21 15:20:36.778 [main] EntityPrinter - entity.Recipes{public_recipe=1, recipe_name=The Big Lebowski's big, scary meal, id=30, user=entity.Users#81}
[DEBUG] 2021-02-21 15:20:36.782 [main] SQL - update Recipes set public_recipe=?, recipe_name=?, Users_id=? where recipe_id=?
[DEBUG] 2021-02-21 15:20:36.787 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.788 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-02-21 15:20:36.798 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-02-21 15:20:36.799 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-02-21 15:20:36.800 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-02-21 15:20:36.801 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipes'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'recipe_name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-02-21 15:20:36.801 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-02-21 15:20:36.802 [main] FromElement - FromClause{level=1} : entity.Recipes (generatedAlias0) -> recipes0_
[DEBUG] 2021-02-21 15:20:36.802 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipes0_.recipe_id
[DEBUG] 2021-02-21 15:20:36.803 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipes0_.recipe_id
[DEBUG] 2021-02-21 15:20:36.804 [main] DotNode - getDataType() : recipe_name -> org.hibernate.type.StringType@1f38957
[DEBUG] 2021-02-21 15:20:36.806 [main] FromReferenceNode - Resolved : generatedAlias0.recipe_name -> recipes0_.recipe_name
[DEBUG] 2021-02-21 15:20:36.808 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-02-21 15:20:36.809 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipes0_.recipe_id ) ( FromClause{level=1} Recipes recipes0_ ) ( where ( like ( recipes0_.recipe_name recipes0_.recipe_id recipe_name ) ? ) ) )
[DEBUG] 2021-02-21 15:20:36.809 [main] JoinProcessor - Using FROM fragment [Recipes recipes0_]
[DEBUG] 2021-02-21 15:20:36.809 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-02-21 15:20:36.810 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipes0_.recipe_id as recipe_i1_0_' {alias=generatedAlias0, className=entity.Recipes, tableAlias=recipes0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipes0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Recipes recipes0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Recipes,tableAlias=recipes0_,origin=null,columns={,className=entity.Recipes}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'recipes0_.recipe_name' {propertyName=recipe_name,dereferenceType=PRIMITIVE,getPropertyPath=recipe_name,path=generatedAlias0.recipe_name,tableAlias=recipes0_,className=entity.Recipes,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipes0_.recipe_id' {alias=generatedAlias0, className=entity.Recipes, tableAlias=recipes0_}
          |  \-[IDENT] IdentNode: 'recipe_name' {originalText=recipe_name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1f38957}

[DEBUG] 2021-02-21 15:20:36.810 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-02-21 15:20:36.811 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Recipes as generatedAlias0 where generatedAlias0.recipe_name like :param0
[DEBUG] 2021-02-21 15:20:36.811 [main] QueryTranslatorImpl - SQL: select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_ where recipes0_.recipe_name like ?
[DEBUG] 2021-02-21 15:20:36.811 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-02-21 15:20:36.814 [main] SQL - select recipes0_.recipe_id as recipe_i1_0_, recipes0_.public_recipe as public_r2_0_, recipes0_.recipe_name as recipe_n3_0_, recipes0_.Users_id as Users_id4_0_ from Recipes recipes0_ where recipes0_.recipe_name like ?
[DEBUG] 2021-02-21 15:20:36.816 [main] Loader - Result set row: 0
[DEBUG] 2021-02-21 15:20:36.817 [main] Loader - Result row: EntityKey[entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.817 [main] TwoPhaseLoad - Resolving attributes for [entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.817 [main] TwoPhaseLoad - Processing attribute `public_recipe` : value = 1
[DEBUG] 2021-02-21 15:20:36.817 [main] TwoPhaseLoad - Attribute (`public_recipe`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.818 [main] TwoPhaseLoad - Processing attribute `recipe_name` : value = The Big Lebowski's big, scary meal
[DEBUG] 2021-02-21 15:20:36.818 [main] TwoPhaseLoad - Attribute (`recipe_name`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.818 [main] TwoPhaseLoad - Processing attribute `user` : value = 81
[DEBUG] 2021-02-21 15:20:36.818 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.818 [main] SQL - select users0_.id as id1_1_0_, users0_.password as password2_1_0_, users0_.username as username3_1_0_, recipes1_.Users_id as Users_id4_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.public_recipe as public_r2_0_2_, recipes1_.recipe_name as recipe_n3_0_2_, recipes1_.Users_id as Users_id4_0_2_ from Users users0_ left outer join Recipes recipes1_ on users0_.id=recipes1_.Users_id where users0_.id=?
[DEBUG] 2021-02-21 15:20:36.820 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-02-21 15:20:36.821 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-02-21 15:20:36.821 [main] CollectionReferenceInitializerImpl - Found row of collection: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.821 [main] TwoPhaseLoad - Resolving attributes for [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.821 [main] TwoPhaseLoad - Processing attribute `password` : value = bananas
[DEBUG] 2021-02-21 15:20:36.822 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.822 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2021-02-21 15:20:36.822 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.822 [main] TwoPhaseLoad - Processing attribute `username` : value = Lucy
[DEBUG] 2021-02-21 15:20:36.822 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-02-21 15:20:36.822 [main] TwoPhaseLoad - Done materializing entity [entity.Users#81]
[DEBUG] 2021-02-21 15:20:36.822 [main] CollectionLoadContext - 1 collections were found in result set for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.822 [main] CollectionLoadContext - Collection fully initialized: [entity.Users.recipes#81]
[DEBUG] 2021-02-21 15:20:36.822 [main] CollectionLoadContext - 1 collections initialized for role: entity.Users.recipes
[DEBUG] 2021-02-21 15:20:36.822 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-02-21 15:20:36.823 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Users#81
[DEBUG] 2021-02-21 15:20:36.823 [main] TwoPhaseLoad - Done materializing entity [entity.Recipes#30]
[DEBUG] 2021-02-21 15:20:36.823 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
